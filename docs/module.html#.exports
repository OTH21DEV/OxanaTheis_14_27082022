<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>JSDoc: Class: exports</title>

    <script src="scripts/prettify/prettify.js"> </script>
    <script src="scripts/prettify/lang-css.js"> </script>
    <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <link type="text/css" rel="stylesheet" href="styles/prettify-tomorrow.css">
    <link type="text/css" rel="stylesheet" href="styles/jsdoc-default.css">
</head>

<body>

<div id="main">

    <h1 class="page-title">Class: exports</h1>

    




<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">()</span><span class="type-signature"></span></h2>
        
            <div class="class-description"><p>AsyncResourceQueue is the queue in charge of run the async scripts
and notify when they finish.</p></div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">()</span><span class="type-signature"></span></h4>
    

    















<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_browser_resources_async-resource-queue.js.html">node_modules/jsdom/lib/jsdom/browser/resources/async-resource-queue.js</a>, <a href="node_modules_jsdom_lib_jsdom_browser_resources_async-resource-queue.js.html#line17">line 17</a>
    </li></ul></dd>
    

    

    

    
</dl>




















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id="~Stream"><span class="type-signature">(inner) </span>Stream<span class="type-signature"></span></h4>




<div class="description">
    <p>The XPath lexer is basically a single regular expression, along with
some helper functions to pop different types.</p>
</div>







<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line51">line 51</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="~stringifyObject"><span class="type-signature">(inner) </span>stringifyObject<span class="type-signature"></span></h4>




<div class="description">
    <p>For debugging and unit tests: returnjs a stringified version of the
argument.</p>
</div>







<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line1555">line 1555</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="~typeDeclarationBuilders"><span class="type-signature">(inner, constant) </span>typeDeclarationBuilders<span class="type-signature"> :TypeDeclarationBuilders</span></h4>






    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">TypeDeclarationBuilders</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line158">line 158</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="~absoluteLocationPath"><span class="type-signature">(inner) </span>absoluteLocationPath<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[2] AbsoluteLocationPath::= '/' RelativeLocationPath? | AbbreviatedAbsoluteLocationPath
[10] AbbreviatedAbsoluteLocationPath::= '//' RelativeLocationPath</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line247">line 247</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~addDefaultPropsToComponent"><span class="type-signature">(inner) </span>addDefaultPropsToComponent<span class="signature">(component, defaultProps)</span><span class="type-signature"> &rarr; {void}</span></h4>
    

    



<div class="description">
    <p>Adds defaultProps to the component passed in.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>component</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The component to add the defaultProps to.</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>defaultProps</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array:<a href="global.html"></a>.&lt;Object:<a href="global.html"></a>></span>
|

<span class="param-type">'unresolved'</span>


            
            </td>

            

            

            <td class="description last"><p>defaultProps to add to the component or the string &quot;unresolved&quot;
if this component has defaultProps that can't be resolved.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html">node_modules/eslint-plugin-react/lib/util/defaultProps.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html#line79">line 79</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        


<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">void</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~additiveExpr"><span class="type-signature">(inner) </span>additiveExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[25] AdditiveExpr::= MultiplicativeExpr
| AdditiveExpr '+' MultiplicativeExpr
| AdditiveExpr '-' MultiplicativeExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line512">line 512</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~addressVector"><span class="type-signature">(inner) </span>addressVector<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Helper function for sortDocumentOrder. Returns a list of indices, from the
node to the root, of positions within parent.
For convenience, the node is the first element of the array.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line945">line 945</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~ancestorHelper"><span class="type-signature">(inner) </span>ancestorHelper<span class="signature">()</span><span class="type-signature"></span></h4>
    

    















<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line894">line 894</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~andExpr"><span class="type-signature">(inner) </span>andExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[22] AndExpr::= EqualityExpr | AndExpr 'and' EqualityExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line497">line 497</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~axisSpecifier"><span class="type-signature">(inner) </span>axisSpecifier<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[5] AxisSpecifier::= AxisName '::' | AbbreviatedAxisSpecifier
[6] AxisName::= 'ancestor' | 'ancestor-or-self' | 'attribute' | 'child'
| 'descendant' | 'descendant-or-self' | 'following'
| 'following-sibling' | 'namespace' | 'parent' |
| 'preceding' | 'preceding-sibling' | 'self'
[13] AbbreviatedAxisSpecifier::= '@'?</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line327">line 327</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~binaryL"><span class="type-signature">(inner) </span>binaryL<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>binaryL  ::= subExpr
| binaryL op subExpr
so a op b op c becomes ((a op b) op c)</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line201">line 201</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~binaryR"><span class="type-signature">(inner) </span>binaryR<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Too bad this is never used. If they made a ** operator (raise to power),
( we would use it.
binaryR  ::= subExpr
| subExpr op binaryR
so a op b op c becomes (a op (b op c))</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line222">line 222</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~buildReactDeclarationTypes"><span class="type-signature">(inner) </span>buildReactDeclarationTypes<span class="signature">(value, parentName)</span><span class="type-signature"> &rarr; {Object}</span></h4>
    

    



<div class="description">
    <p>Creates the representation of the React propTypes for the component.
The representation is used to verify nested used properties.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>Node of the PropTypes for the desired property</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>parentName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line390">line 390</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The representation of the declaration, empty object means
the property is declared without the need for further analysis.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Object</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~buildTypeAnnotationDeclarationTypes"><span class="type-signature">(inner) </span>buildTypeAnnotationDeclarationTypes<span class="signature">(annotation, parentName, seen<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Object}</span></h4>
    

    



<div class="description">
    <p>Creates the representation of the React props type annotation for the component.
The representation is used to verify nested used properties.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>annotation</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last"><p>Type annotation for the props class property.</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>parentName</code></td>
            

            <td class="type">
            
                
<span class="param-type">String</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>seen</code></td>
            

            <td class="type">
            
                
<span class="param-type">Set:<a href="global.html"></a>.&lt;ASTNode:<a href="global.html"></a>></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line269">line 269</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The representation of the declaration, empty object means
the property is declared without the need for further analysis.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Object</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~declarePropTypesForIntersectionTypeAnnotation"><span class="type-signature">(inner) </span>declarePropTypesForIntersectionTypeAnnotation<span class="signature">(propTypes, declaredPropTypes)</span><span class="type-signature"> &rarr; {Boolean}</span></h4>
    

    



<div class="description">
    <p>Marks all props found inside IntersectionTypeAnnotation as declared.
Since InterSectionTypeAnnotations can be nested, this handles recursively.</p>
<p>Modifies the declaredPropTypes object</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>propTypes</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>declaredPropTypes</code></td>
            

            <td class="type">
            
                
<span class="param-type">Object</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line333">line 333</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>True if propTypes should be ignored (e.g. when a type can't be resolved, when it is imported)</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~declarePropTypesForObjectTypeAnnotation"><span class="type-signature">(inner) </span>declarePropTypesForObjectTypeAnnotation<span class="signature">(propTypes, declaredPropTypes)</span><span class="type-signature"> &rarr; {Boolean}</span></h4>
    

    



<div class="description">
    <p>Marks all props found inside ObjectTypeAnnotation as declared.</p>
<p>Modifies the declaredProperties object</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>propTypes</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>declaredPropTypes</code></td>
            

            <td class="type">
            
                
<span class="param-type">Object</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line295">line 295</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>True if propTypes should be ignored (e.g. when a type can't be resolved, when it is imported)</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~descendantDfs"><span class="type-signature">(inner) </span>descendantDfs<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>node-set, axis -&gt; node-set</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line838">line 838</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~equalityExpr"><span class="type-signature">(inner) </span>equalityExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[23] EqualityExpr::= RelationalExpr | EqualityExpr '=' RelationalExpr
| EqualityExpr '!=' RelationalExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line501">line 501</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~filterExpr"><span class="type-signature">(inner) </span>filterExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[20] FilterExpr::= PrimaryExpr | FilterExpr Predicate
aka. FilterExpr ::= PrimaryExpr Predicate*</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line477">line 477</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~filterInterfaceOrAliasByName"><span class="type-signature">(inner) </span>filterInterfaceOrAliasByName<span class="signature">(node, typeName)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    <p>Returns true if the interface or type alias declaration node name matches the type-name str</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>typeName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line568">line 568</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        


<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~filterInterfaceOrTypeAlias"><span class="type-signature">(inner) </span>filterInterfaceOrTypeAlias<span class="signature">(node)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    <p>Returns true if the node is either a interface or type alias declaration</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line556">line 556</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        


<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~followingHelper"><span class="type-signature">(inner) </span>followingHelper<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>This axis is inefficient if there are many nodes in the nodeList.
But I think it's a pretty useless axis so it's ok.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line757">line 757</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~followingNode"><span class="type-signature">(inner) </span>followingNode<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Returns the next node in a document-order depth-first search.
See the definition of document order[1]:</p>
<ol>
<li>element</li>
<li>namespace nodes</li>
<li>attributes</li>
<li>children
[1]: http://www.w3.org/TR/xpath/#dt-document-order</li>
</ol>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line724">line 724</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~followingNonDescendantNode"><span class="type-signature">(inner) </span>followingNonDescendantNode<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Returns the next non-descendant node in document order.
This is the first node in following::node(), if node is the context.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line704">line 704</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~functionCall"><span class="type-signature">(inner) </span>functionCall<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[16] FunctionCall::= FunctionName '(' ( Argument ( ',' Argument )* )? ')'
[17] Argument::= Expr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line421">line 421</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~getDefaultPropsFromObjectExpression"><span class="type-signature">(inner) </span>getDefaultPropsFromObjectExpression<span class="signature">(objectExpression)</span><span class="type-signature"> &rarr; {Object|string}</span></h4>
    

    



<div class="description">
    <p>Extracts a DefaultProp from an ObjectExpression node.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>objectExpression</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>ObjectExpression node.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html">node_modules/eslint-plugin-react/lib/util/defaultProps.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>Object representation of a defaultProp, to be consumed by
<code>addDefaultPropsToComponent</code>, or string &quot;unresolved&quot;, if the defaultProps
from this ObjectExpression can't be resolved.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Object</span>
|

<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~getInTypeScope"><span class="type-signature">(inner) </span>getInTypeScope<span class="signature">(key)</span><span class="type-signature"> &rarr; {ASTNode}</span></h4>
    

    



<div class="description">
    <p>Gets a node from the scope.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>key</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last"><p>The name of the identifier to access.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line132">line 132</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The ASTNode associated with the given identifier.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ASTNode</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~getLeftMostTypeName"><span class="type-signature">(inner) </span>getLeftMostTypeName<span class="signature">(node)</span><span class="type-signature"> &rarr; {string|undefined}</span></h4>
    

    



<div class="description">
    <p>Returns the left most typeName of a node, e.g: FC<Props>, React.FC<Props>
The representation is used to verify nested used properties.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line541">line 541</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        


<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>
|

<span class="param-type">undefined</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~handleFunctionLikeExpressions"><span class="type-signature">(inner) </span>handleFunctionLikeExpressions<span class="signature">(node)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Handle both stateless functions and setState updater functions.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>We expect either an ArrowFunctionExpression,
FunctionDeclaration, or FunctionExpression</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html">node_modules/eslint-plugin-react/lib/util/usedPropTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html#line447">line 447</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~hasCustomValidator"><span class="type-signature">(inner) </span>hasCustomValidator<span class="signature">(validator)</span><span class="type-signature"> &rarr; {Boolean}</span></h4>
    

    



<div class="description">
    <p>Checks if prop should be validated by plugin-react-proptypes</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>validator</code></td>
            

            <td class="type">
            
                
<span class="param-type">String</span>


            
            </td>

            

            

            <td class="description last"><p>Name of validator to check.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line152">line 152</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>True if validator should be checked by custom validator.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~isAnnotatedClassPropsDeclaration"><span class="type-signature">(inner) </span>isAnnotatedClassPropsDeclaration<span class="signature">(node)</span><span class="type-signature"> &rarr; {Boolean}</span></h4>
    

    



<div class="description">
    <p>Checks if we are declaring a <code>props</code> class property with a flow type annotation.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The AST node being checked.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line1106">line 1106</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>True if the node is a type annotated props declaration, false if not.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~locationPath"><span class="type-signature">(inner) </span>locationPath<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[1] LocationPath::= RelativeLocationPath | AbsoluteLocationPath
e.g. a, a/b, //a/b</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line240">line 240</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~markAnnotatedFunctionArgumentsAsDeclared"><span class="type-signature">(inner) </span>markAnnotatedFunctionArgumentsAsDeclared<span class="signature">(node)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>We expect either an ArrowFunctionExpression,
FunctionDeclaration, or FunctionExpression</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line995">line 995</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~markDefaultPropsAsUnresolved"><span class="type-signature">(inner) </span>markDefaultPropsAsUnresolved<span class="signature">(component)</span><span class="type-signature"> &rarr; {void}</span></h4>
    

    



<div class="description">
    <p>Marks a component's DefaultProps declaration as &quot;unresolved&quot;. A component's DefaultProps is
marked as &quot;unresolved&quot; if we cannot safely infer the values of its defaultProps declarations
without risking false negatives.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>component</code></td>
            

            <td class="type">
            
                
<span class="param-type">Object</span>


            
            </td>

            

            

            <td class="description last"><p>The component to mark.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html">node_modules/eslint-plugin-react/lib/util/defaultProps.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html#line66">line 66</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        


<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">void</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~markDestructuredFunctionArgumentsAsUsed"><span class="type-signature">(inner) </span>markDestructuredFunctionArgumentsAsUsed<span class="signature">(node)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>We expect either an ArrowFunctionExpression,
FunctionDeclaration, or FunctionExpression</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html">node_modules/eslint-plugin-react/lib/util/usedPropTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html#line422">line 422</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~markPropTypesAsDeclared"><span class="type-signature">(inner) </span>markPropTypesAsDeclared<span class="signature">(node, propTypes)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Mark a prop type as declared</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The AST node being checked.</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>propTypes</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The AST node containing the proptypes</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line851">line 851</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~markPropTypesAsUsed"><span class="type-signature">(inner) </span>markPropTypesAsUsed<span class="signature">(node, parentNames<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Mark a prop type as used</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last"><p>The AST node being marked.</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>parentNames</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array:<a href="global.html"></a>.&lt;string:<a href="global.html"></a>></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html">node_modules/eslint-plugin-react/lib/util/usedPropTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html#line301">line 301</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~mergeNodeLists"><span class="type-signature">(inner) </span>mergeNodeLists<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>The merge in merge-sort.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line1045">line 1045</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~multiplicativeExpr"><span class="type-signature">(inner) </span>multiplicativeExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[26] MultiplicativeExpr::= UnaryExpr
| MultiplicativeExpr MultiplyOperator UnaryExpr
| MultiplicativeExpr 'div' UnaryExpr
| MultiplicativeExpr 'mod' UnaryExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line518">line 518</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~nodeAndAncestors"><span class="type-signature">(inner) </span>nodeAndAncestors<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Returns an array containing all the ancestors down to a node.
The array starts with document.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line1022">line 1022</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~NodeMatcher"><span class="type-signature">(inner) </span>NodeMatcher<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Matcher used in the axes.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line642">line 642</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~NodeMultiSet"><span class="type-signature">(inner) </span>NodeMultiSet<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>The NodeMultiSet is a helper class to help generate
{nodes:[], pos:[], lasts:[]} structures. It is useful for the
descendant, descendant-or-self, following-sibling, and
preceding-sibling axes for which we can use a stack to organize things.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line574">line 574</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~nodeTypeTest"><span class="type-signature">(inner) </span>nodeTypeTest<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[7] NodeTest::= NameTest | NodeType '(' ')' | 'processing-instruction' '(' Literal ')'
[38] NodeType::= 'comment' | 'text' | 'processing-instruction' | 'node'
I've split nodeTypeTest from nodeNameTest for convenience.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line344">line 344</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~optimize"><span class="type-signature">(inner) </span>optimize<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Some things I've been considering:</p>
<ol>
<li>a//b becomes a/descendant::b if there's no predicate that uses
position() or last()</li>
<li>axis[pred]: when pred doesn't use position, evaluate it just once per
node in the node-set rather than once per (node, position, last).
For more optimizations, look up Gecko's optimizer:
http://mxr.mozilla.org/mozilla-central/source/content/xslt/src/xpath/txXPathOptimizer.cpp</li>
</ol>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line550">line 550</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~orExpr"><span class="type-signature">(inner) </span>orExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[21] OrExpr::= AndExpr | OrExpr 'or' AndExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line489">line 489</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~pathExpr"><span class="type-signature">(inner) </span>pathExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[19] PathExpr ::= LocationPath
| FilterExpr
| FilterExpr '/' RelativeLocationPath
| FilterExpr '//' RelativeLocationPath
Unlike most other nodes, this one always generates a node because
at this point all reverse nodesets must turn into a forward nodeset</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line456">line 456</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~precedingNode"><span class="type-signature">(inner) </span>precedingNode<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Returns the previous node in document order (excluding attributes
and namespace nodes).</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line740">line 740</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~predicate"><span class="type-signature">(inner) </span>predicate<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[8] Predicate::= '[' PredicateExpr ']'
[9] PredicateExpr::= Expr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line373">line 373</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~primaryExpr"><span class="type-signature">(inner) </span>primaryExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[15] PrimaryExpr::= VariableReference | '(' Expr ')' | Literal | Number | FunctionCall
e.g. $x,  (3+4),  &quot;hi&quot;,  32,  f(x)</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~relationalExpr"><span class="type-signature">(inner) </span>relationalExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[24] RelationalExpr::= AdditiveExpr | RelationalExpr '&lt;' AdditiveExpr
| RelationalExpr '&gt;' AdditiveExpr
| RelationalExpr '&lt;=' AdditiveExpr
| RelationalExpr '&gt;=' AdditiveExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line507">line 507</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~relativeLocationPath"><span class="type-signature">(inner) </span>relativeLocationPath<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[3] RelativeLocationPath::= Step | RelativeLocationPath '/' Step |
| AbbreviatedRelativeLocationPath
[11] AbbreviatedRelativeLocationPath::= RelativeLocationPath '//' Step
e.g. p/a, etc.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line261">line 261</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~resolveNodeValue"><span class="type-signature">(inner) </span>resolveNodeValue<span class="signature">(node)</span><span class="type-signature"> &rarr; {ASTNode|null}</span></h4>
    

    



<div class="description">
    <p>Try to resolve the node passed in to a variable in the current scope. If the node passed in is not
an Identifier, then the node is simply returned.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The node to resolve.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html">node_modules/eslint-plugin-react/lib/util/defaultProps.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>Return null if the value could not be resolved, ASTNode otherwise.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ASTNode</span>
|

<span class="param-type">null</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~resolveSuperParameterPropsType"><span class="type-signature">(inner) </span>resolveSuperParameterPropsType<span class="signature">(node)</span><span class="type-signature"> &rarr; {ASTNode}</span></h4>
    

    



<div class="description">
    <p>Resolve the type annotation for a given class declaration node with superTypeParameters.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The annotation or a node containing the type annotation.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line1079">line 1079</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The resolved type annotation for the node.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ASTNode</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~resolveTypeAnnotation"><span class="type-signature">(inner) </span>resolveTypeAnnotation<span class="signature">(node)</span><span class="type-signature"> &rarr; {ASTNode}</span></h4>
    

    



<div class="description">
    <p>Resolve the type annotation for a given node.
Flow annotations are sometimes wrapped in outer <code>TypeAnnotation</code>
and <code>NullableTypeAnnotation</code> nodes which obscure the annotation we're
interested in.
This method also resolves type aliases where possible.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The annotation or a node containing the type annotation.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line249">line 249</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The resolved type annotation for the node.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ASTNode</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~resolveValueForIdentifierNode"><span class="type-signature">(inner) </span>resolveValueForIdentifierNode<span class="signature">(node, callback)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Resolve node of type Identifier when building declaration types.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>callback</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last"><p>called with the resolved value only if resolved.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line366">line 366</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~setInTypeScope"><span class="type-signature">(inner) </span>setInTypeScope<span class="signature">(key, value)</span><span class="type-signature"> &rarr; {ASTNode}</span></h4>
    

    



<div class="description">
    <p>Sets the new value in the scope.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>key</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last"><p>The name of the identifier to access</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The new value for the identifier.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The ASTNode associated with the given identifier.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ASTNode</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~sortNodeMultiSet"><span class="type-signature">(inner) </span>sortNodeMultiSet<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Sort node multiset. Does not do any de-duping.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line1000">line 1000</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~step"><span class="type-signature">(inner) </span>step<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[4] Step::= AxisSpecifier NodeTest Predicate* | AbbreviatedStep
[12] AbbreviatedStep::= '.' | '..'
e.g. @href, self::p, p, a[@href], ., ..</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line287">line 287</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~typeScope"><span class="type-signature">(inner) </span>typeScope<span class="signature">()</span><span class="type-signature"> &rarr; {Object}</span></h4>
    

    



<div class="description">
    <p>Returns the full scope.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line123">line 123</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The whole scope.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Object</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~unaryExpr"><span class="type-signature">(inner) </span>unaryExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[27] UnaryExpr::= UnionExpr | '-' UnaryExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line521">line 521</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~unionExpr"><span class="type-signature">(inner) </span>unionExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[18] UnionExpr::= PathExpr | UnionExpr '|' PathExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line448">line 448</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">()</span><span class="type-signature"></span></h2>
        
            <div class="class-description"><p>Manage all the request and it is able to abort
all pending request.</p></div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">()</span><span class="type-signature"></span></h4>
    

    















<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_browser_resources_request-manager.js.html">node_modules/jsdom/lib/jsdom/browser/resources/request-manager.js</a>, <a href="node_modules_jsdom_lib_jsdom_browser_resources_request-manager.js.html#line7">line 7</a>
    </li></ul></dd>
    

    

    

    
</dl>




















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id="~Stream"><span class="type-signature">(inner) </span>Stream<span class="type-signature"></span></h4>




<div class="description">
    <p>The XPath lexer is basically a single regular expression, along with
some helper functions to pop different types.</p>
</div>







<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line51">line 51</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="~stringifyObject"><span class="type-signature">(inner) </span>stringifyObject<span class="type-signature"></span></h4>




<div class="description">
    <p>For debugging and unit tests: returnjs a stringified version of the
argument.</p>
</div>







<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line1555">line 1555</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="~typeDeclarationBuilders"><span class="type-signature">(inner, constant) </span>typeDeclarationBuilders<span class="type-signature"> :TypeDeclarationBuilders</span></h4>






    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">TypeDeclarationBuilders</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line158">line 158</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="~absoluteLocationPath"><span class="type-signature">(inner) </span>absoluteLocationPath<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[2] AbsoluteLocationPath::= '/' RelativeLocationPath? | AbbreviatedAbsoluteLocationPath
[10] AbbreviatedAbsoluteLocationPath::= '//' RelativeLocationPath</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line247">line 247</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~addDefaultPropsToComponent"><span class="type-signature">(inner) </span>addDefaultPropsToComponent<span class="signature">(component, defaultProps)</span><span class="type-signature"> &rarr; {void}</span></h4>
    

    



<div class="description">
    <p>Adds defaultProps to the component passed in.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>component</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The component to add the defaultProps to.</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>defaultProps</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array:<a href="global.html"></a>.&lt;Object:<a href="global.html"></a>></span>
|

<span class="param-type">'unresolved'</span>


            
            </td>

            

            

            <td class="description last"><p>defaultProps to add to the component or the string &quot;unresolved&quot;
if this component has defaultProps that can't be resolved.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html">node_modules/eslint-plugin-react/lib/util/defaultProps.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html#line79">line 79</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        


<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">void</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~additiveExpr"><span class="type-signature">(inner) </span>additiveExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[25] AdditiveExpr::= MultiplicativeExpr
| AdditiveExpr '+' MultiplicativeExpr
| AdditiveExpr '-' MultiplicativeExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line512">line 512</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~addressVector"><span class="type-signature">(inner) </span>addressVector<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Helper function for sortDocumentOrder. Returns a list of indices, from the
node to the root, of positions within parent.
For convenience, the node is the first element of the array.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line945">line 945</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~ancestorHelper"><span class="type-signature">(inner) </span>ancestorHelper<span class="signature">()</span><span class="type-signature"></span></h4>
    

    















<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line894">line 894</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~andExpr"><span class="type-signature">(inner) </span>andExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[22] AndExpr::= EqualityExpr | AndExpr 'and' EqualityExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line497">line 497</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~axisSpecifier"><span class="type-signature">(inner) </span>axisSpecifier<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[5] AxisSpecifier::= AxisName '::' | AbbreviatedAxisSpecifier
[6] AxisName::= 'ancestor' | 'ancestor-or-self' | 'attribute' | 'child'
| 'descendant' | 'descendant-or-self' | 'following'
| 'following-sibling' | 'namespace' | 'parent' |
| 'preceding' | 'preceding-sibling' | 'self'
[13] AbbreviatedAxisSpecifier::= '@'?</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line327">line 327</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~binaryL"><span class="type-signature">(inner) </span>binaryL<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>binaryL  ::= subExpr
| binaryL op subExpr
so a op b op c becomes ((a op b) op c)</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line201">line 201</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~binaryR"><span class="type-signature">(inner) </span>binaryR<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Too bad this is never used. If they made a ** operator (raise to power),
( we would use it.
binaryR  ::= subExpr
| subExpr op binaryR
so a op b op c becomes (a op (b op c))</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line222">line 222</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~buildReactDeclarationTypes"><span class="type-signature">(inner) </span>buildReactDeclarationTypes<span class="signature">(value, parentName)</span><span class="type-signature"> &rarr; {Object}</span></h4>
    

    



<div class="description">
    <p>Creates the representation of the React propTypes for the component.
The representation is used to verify nested used properties.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>Node of the PropTypes for the desired property</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>parentName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line390">line 390</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The representation of the declaration, empty object means
the property is declared without the need for further analysis.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Object</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~buildTypeAnnotationDeclarationTypes"><span class="type-signature">(inner) </span>buildTypeAnnotationDeclarationTypes<span class="signature">(annotation, parentName, seen<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Object}</span></h4>
    

    



<div class="description">
    <p>Creates the representation of the React props type annotation for the component.
The representation is used to verify nested used properties.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>annotation</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last"><p>Type annotation for the props class property.</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>parentName</code></td>
            

            <td class="type">
            
                
<span class="param-type">String</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>seen</code></td>
            

            <td class="type">
            
                
<span class="param-type">Set:<a href="global.html"></a>.&lt;ASTNode:<a href="global.html"></a>></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line269">line 269</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The representation of the declaration, empty object means
the property is declared without the need for further analysis.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Object</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~declarePropTypesForIntersectionTypeAnnotation"><span class="type-signature">(inner) </span>declarePropTypesForIntersectionTypeAnnotation<span class="signature">(propTypes, declaredPropTypes)</span><span class="type-signature"> &rarr; {Boolean}</span></h4>
    

    



<div class="description">
    <p>Marks all props found inside IntersectionTypeAnnotation as declared.
Since InterSectionTypeAnnotations can be nested, this handles recursively.</p>
<p>Modifies the declaredPropTypes object</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>propTypes</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>declaredPropTypes</code></td>
            

            <td class="type">
            
                
<span class="param-type">Object</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line333">line 333</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>True if propTypes should be ignored (e.g. when a type can't be resolved, when it is imported)</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~declarePropTypesForObjectTypeAnnotation"><span class="type-signature">(inner) </span>declarePropTypesForObjectTypeAnnotation<span class="signature">(propTypes, declaredPropTypes)</span><span class="type-signature"> &rarr; {Boolean}</span></h4>
    

    



<div class="description">
    <p>Marks all props found inside ObjectTypeAnnotation as declared.</p>
<p>Modifies the declaredProperties object</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>propTypes</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>declaredPropTypes</code></td>
            

            <td class="type">
            
                
<span class="param-type">Object</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line295">line 295</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>True if propTypes should be ignored (e.g. when a type can't be resolved, when it is imported)</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~descendantDfs"><span class="type-signature">(inner) </span>descendantDfs<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>node-set, axis -&gt; node-set</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line838">line 838</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~equalityExpr"><span class="type-signature">(inner) </span>equalityExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[23] EqualityExpr::= RelationalExpr | EqualityExpr '=' RelationalExpr
| EqualityExpr '!=' RelationalExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line501">line 501</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~filterExpr"><span class="type-signature">(inner) </span>filterExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[20] FilterExpr::= PrimaryExpr | FilterExpr Predicate
aka. FilterExpr ::= PrimaryExpr Predicate*</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line477">line 477</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~filterInterfaceOrAliasByName"><span class="type-signature">(inner) </span>filterInterfaceOrAliasByName<span class="signature">(node, typeName)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    <p>Returns true if the interface or type alias declaration node name matches the type-name str</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>typeName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line568">line 568</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        


<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~filterInterfaceOrTypeAlias"><span class="type-signature">(inner) </span>filterInterfaceOrTypeAlias<span class="signature">(node)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    <p>Returns true if the node is either a interface or type alias declaration</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line556">line 556</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        


<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~followingHelper"><span class="type-signature">(inner) </span>followingHelper<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>This axis is inefficient if there are many nodes in the nodeList.
But I think it's a pretty useless axis so it's ok.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line757">line 757</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~followingNode"><span class="type-signature">(inner) </span>followingNode<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Returns the next node in a document-order depth-first search.
See the definition of document order[1]:</p>
<ol>
<li>element</li>
<li>namespace nodes</li>
<li>attributes</li>
<li>children
[1]: http://www.w3.org/TR/xpath/#dt-document-order</li>
</ol>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line724">line 724</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~followingNonDescendantNode"><span class="type-signature">(inner) </span>followingNonDescendantNode<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Returns the next non-descendant node in document order.
This is the first node in following::node(), if node is the context.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line704">line 704</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~functionCall"><span class="type-signature">(inner) </span>functionCall<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[16] FunctionCall::= FunctionName '(' ( Argument ( ',' Argument )* )? ')'
[17] Argument::= Expr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line421">line 421</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~getDefaultPropsFromObjectExpression"><span class="type-signature">(inner) </span>getDefaultPropsFromObjectExpression<span class="signature">(objectExpression)</span><span class="type-signature"> &rarr; {Object|string}</span></h4>
    

    



<div class="description">
    <p>Extracts a DefaultProp from an ObjectExpression node.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>objectExpression</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>ObjectExpression node.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html">node_modules/eslint-plugin-react/lib/util/defaultProps.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>Object representation of a defaultProp, to be consumed by
<code>addDefaultPropsToComponent</code>, or string &quot;unresolved&quot;, if the defaultProps
from this ObjectExpression can't be resolved.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Object</span>
|

<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~getInTypeScope"><span class="type-signature">(inner) </span>getInTypeScope<span class="signature">(key)</span><span class="type-signature"> &rarr; {ASTNode}</span></h4>
    

    



<div class="description">
    <p>Gets a node from the scope.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>key</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last"><p>The name of the identifier to access.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line132">line 132</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The ASTNode associated with the given identifier.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ASTNode</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~getLeftMostTypeName"><span class="type-signature">(inner) </span>getLeftMostTypeName<span class="signature">(node)</span><span class="type-signature"> &rarr; {string|undefined}</span></h4>
    

    



<div class="description">
    <p>Returns the left most typeName of a node, e.g: FC<Props>, React.FC<Props>
The representation is used to verify nested used properties.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line541">line 541</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        


<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>
|

<span class="param-type">undefined</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~handleFunctionLikeExpressions"><span class="type-signature">(inner) </span>handleFunctionLikeExpressions<span class="signature">(node)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Handle both stateless functions and setState updater functions.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>We expect either an ArrowFunctionExpression,
FunctionDeclaration, or FunctionExpression</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html">node_modules/eslint-plugin-react/lib/util/usedPropTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html#line447">line 447</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~hasCustomValidator"><span class="type-signature">(inner) </span>hasCustomValidator<span class="signature">(validator)</span><span class="type-signature"> &rarr; {Boolean}</span></h4>
    

    



<div class="description">
    <p>Checks if prop should be validated by plugin-react-proptypes</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>validator</code></td>
            

            <td class="type">
            
                
<span class="param-type">String</span>


            
            </td>

            

            

            <td class="description last"><p>Name of validator to check.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line152">line 152</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>True if validator should be checked by custom validator.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~isAnnotatedClassPropsDeclaration"><span class="type-signature">(inner) </span>isAnnotatedClassPropsDeclaration<span class="signature">(node)</span><span class="type-signature"> &rarr; {Boolean}</span></h4>
    

    



<div class="description">
    <p>Checks if we are declaring a <code>props</code> class property with a flow type annotation.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The AST node being checked.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line1106">line 1106</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>True if the node is a type annotated props declaration, false if not.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~locationPath"><span class="type-signature">(inner) </span>locationPath<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[1] LocationPath::= RelativeLocationPath | AbsoluteLocationPath
e.g. a, a/b, //a/b</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line240">line 240</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~markAnnotatedFunctionArgumentsAsDeclared"><span class="type-signature">(inner) </span>markAnnotatedFunctionArgumentsAsDeclared<span class="signature">(node)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>We expect either an ArrowFunctionExpression,
FunctionDeclaration, or FunctionExpression</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line995">line 995</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~markDefaultPropsAsUnresolved"><span class="type-signature">(inner) </span>markDefaultPropsAsUnresolved<span class="signature">(component)</span><span class="type-signature"> &rarr; {void}</span></h4>
    

    



<div class="description">
    <p>Marks a component's DefaultProps declaration as &quot;unresolved&quot;. A component's DefaultProps is
marked as &quot;unresolved&quot; if we cannot safely infer the values of its defaultProps declarations
without risking false negatives.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>component</code></td>
            

            <td class="type">
            
                
<span class="param-type">Object</span>


            
            </td>

            

            

            <td class="description last"><p>The component to mark.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html">node_modules/eslint-plugin-react/lib/util/defaultProps.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html#line66">line 66</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        


<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">void</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~markDestructuredFunctionArgumentsAsUsed"><span class="type-signature">(inner) </span>markDestructuredFunctionArgumentsAsUsed<span class="signature">(node)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>We expect either an ArrowFunctionExpression,
FunctionDeclaration, or FunctionExpression</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html">node_modules/eslint-plugin-react/lib/util/usedPropTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html#line422">line 422</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~markPropTypesAsDeclared"><span class="type-signature">(inner) </span>markPropTypesAsDeclared<span class="signature">(node, propTypes)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Mark a prop type as declared</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The AST node being checked.</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>propTypes</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The AST node containing the proptypes</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line851">line 851</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~markPropTypesAsUsed"><span class="type-signature">(inner) </span>markPropTypesAsUsed<span class="signature">(node, parentNames<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Mark a prop type as used</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last"><p>The AST node being marked.</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>parentNames</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array:<a href="global.html"></a>.&lt;string:<a href="global.html"></a>></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html">node_modules/eslint-plugin-react/lib/util/usedPropTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html#line301">line 301</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~mergeNodeLists"><span class="type-signature">(inner) </span>mergeNodeLists<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>The merge in merge-sort.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line1045">line 1045</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~multiplicativeExpr"><span class="type-signature">(inner) </span>multiplicativeExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[26] MultiplicativeExpr::= UnaryExpr
| MultiplicativeExpr MultiplyOperator UnaryExpr
| MultiplicativeExpr 'div' UnaryExpr
| MultiplicativeExpr 'mod' UnaryExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line518">line 518</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~nodeAndAncestors"><span class="type-signature">(inner) </span>nodeAndAncestors<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Returns an array containing all the ancestors down to a node.
The array starts with document.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line1022">line 1022</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~NodeMatcher"><span class="type-signature">(inner) </span>NodeMatcher<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Matcher used in the axes.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line642">line 642</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~NodeMultiSet"><span class="type-signature">(inner) </span>NodeMultiSet<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>The NodeMultiSet is a helper class to help generate
{nodes:[], pos:[], lasts:[]} structures. It is useful for the
descendant, descendant-or-self, following-sibling, and
preceding-sibling axes for which we can use a stack to organize things.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line574">line 574</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~nodeTypeTest"><span class="type-signature">(inner) </span>nodeTypeTest<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[7] NodeTest::= NameTest | NodeType '(' ')' | 'processing-instruction' '(' Literal ')'
[38] NodeType::= 'comment' | 'text' | 'processing-instruction' | 'node'
I've split nodeTypeTest from nodeNameTest for convenience.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line344">line 344</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~optimize"><span class="type-signature">(inner) </span>optimize<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Some things I've been considering:</p>
<ol>
<li>a//b becomes a/descendant::b if there's no predicate that uses
position() or last()</li>
<li>axis[pred]: when pred doesn't use position, evaluate it just once per
node in the node-set rather than once per (node, position, last).
For more optimizations, look up Gecko's optimizer:
http://mxr.mozilla.org/mozilla-central/source/content/xslt/src/xpath/txXPathOptimizer.cpp</li>
</ol>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line550">line 550</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~orExpr"><span class="type-signature">(inner) </span>orExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[21] OrExpr::= AndExpr | OrExpr 'or' AndExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line489">line 489</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~pathExpr"><span class="type-signature">(inner) </span>pathExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[19] PathExpr ::= LocationPath
| FilterExpr
| FilterExpr '/' RelativeLocationPath
| FilterExpr '//' RelativeLocationPath
Unlike most other nodes, this one always generates a node because
at this point all reverse nodesets must turn into a forward nodeset</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line456">line 456</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~precedingNode"><span class="type-signature">(inner) </span>precedingNode<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Returns the previous node in document order (excluding attributes
and namespace nodes).</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line740">line 740</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~predicate"><span class="type-signature">(inner) </span>predicate<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[8] Predicate::= '[' PredicateExpr ']'
[9] PredicateExpr::= Expr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line373">line 373</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~primaryExpr"><span class="type-signature">(inner) </span>primaryExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[15] PrimaryExpr::= VariableReference | '(' Expr ')' | Literal | Number | FunctionCall
e.g. $x,  (3+4),  &quot;hi&quot;,  32,  f(x)</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~relationalExpr"><span class="type-signature">(inner) </span>relationalExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[24] RelationalExpr::= AdditiveExpr | RelationalExpr '&lt;' AdditiveExpr
| RelationalExpr '&gt;' AdditiveExpr
| RelationalExpr '&lt;=' AdditiveExpr
| RelationalExpr '&gt;=' AdditiveExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line507">line 507</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~relativeLocationPath"><span class="type-signature">(inner) </span>relativeLocationPath<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[3] RelativeLocationPath::= Step | RelativeLocationPath '/' Step |
| AbbreviatedRelativeLocationPath
[11] AbbreviatedRelativeLocationPath::= RelativeLocationPath '//' Step
e.g. p/a, etc.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line261">line 261</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~resolveNodeValue"><span class="type-signature">(inner) </span>resolveNodeValue<span class="signature">(node)</span><span class="type-signature"> &rarr; {ASTNode|null}</span></h4>
    

    



<div class="description">
    <p>Try to resolve the node passed in to a variable in the current scope. If the node passed in is not
an Identifier, then the node is simply returned.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The node to resolve.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html">node_modules/eslint-plugin-react/lib/util/defaultProps.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>Return null if the value could not be resolved, ASTNode otherwise.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ASTNode</span>
|

<span class="param-type">null</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~resolveSuperParameterPropsType"><span class="type-signature">(inner) </span>resolveSuperParameterPropsType<span class="signature">(node)</span><span class="type-signature"> &rarr; {ASTNode}</span></h4>
    

    



<div class="description">
    <p>Resolve the type annotation for a given class declaration node with superTypeParameters.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The annotation or a node containing the type annotation.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line1079">line 1079</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The resolved type annotation for the node.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ASTNode</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~resolveTypeAnnotation"><span class="type-signature">(inner) </span>resolveTypeAnnotation<span class="signature">(node)</span><span class="type-signature"> &rarr; {ASTNode}</span></h4>
    

    



<div class="description">
    <p>Resolve the type annotation for a given node.
Flow annotations are sometimes wrapped in outer <code>TypeAnnotation</code>
and <code>NullableTypeAnnotation</code> nodes which obscure the annotation we're
interested in.
This method also resolves type aliases where possible.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The annotation or a node containing the type annotation.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line249">line 249</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The resolved type annotation for the node.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ASTNode</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~resolveValueForIdentifierNode"><span class="type-signature">(inner) </span>resolveValueForIdentifierNode<span class="signature">(node, callback)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Resolve node of type Identifier when building declaration types.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>callback</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last"><p>called with the resolved value only if resolved.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line366">line 366</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~setInTypeScope"><span class="type-signature">(inner) </span>setInTypeScope<span class="signature">(key, value)</span><span class="type-signature"> &rarr; {ASTNode}</span></h4>
    

    



<div class="description">
    <p>Sets the new value in the scope.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>key</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last"><p>The name of the identifier to access</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The new value for the identifier.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The ASTNode associated with the given identifier.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ASTNode</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~sortNodeMultiSet"><span class="type-signature">(inner) </span>sortNodeMultiSet<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Sort node multiset. Does not do any de-duping.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line1000">line 1000</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~step"><span class="type-signature">(inner) </span>step<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[4] Step::= AxisSpecifier NodeTest Predicate* | AbbreviatedStep
[12] AbbreviatedStep::= '.' | '..'
e.g. @href, self::p, p, a[@href], ., ..</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line287">line 287</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~typeScope"><span class="type-signature">(inner) </span>typeScope<span class="signature">()</span><span class="type-signature"> &rarr; {Object}</span></h4>
    

    



<div class="description">
    <p>Returns the full scope.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line123">line 123</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The whole scope.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Object</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~unaryExpr"><span class="type-signature">(inner) </span>unaryExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[27] UnaryExpr::= UnionExpr | '-' UnaryExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line521">line 521</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~unionExpr"><span class="type-signature">(inner) </span>unionExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[18] UnionExpr::= PathExpr | UnionExpr '|' PathExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line448">line 448</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
    

    

    
</article>

</section>







<section>

<header>
    
        <h2><span class="attribs"><span class="type-signature"></span></span>exports<span class="signature">()</span><span class="type-signature"></span></h2>
        
            <div class="class-description"><p>Queue for all the resources to be download except async scripts.
Async scripts have their own queue AsyncResourceQueue.</p></div>
        
    
</header>

<article>
    <div class="container-overview">
    
        

    
    <h2>Constructor</h2>
    

    
    <h4 class="name" id=".exports"><span class="type-signature"></span>new exports<span class="signature">()</span><span class="type-signature"></span></h4>
    

    















<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_browser_resources_resource-queue.js.html">node_modules/jsdom/lib/jsdom/browser/resources/resource-queue.js</a>, <a href="node_modules_jsdom_lib_jsdom_browser_resources_resource-queue.js.html#line7">line 7</a>
    </li></ul></dd>
    

    

    

    
</dl>




















    
    </div>

    

    

    

    

    

    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id="~Stream"><span class="type-signature">(inner) </span>Stream<span class="type-signature"></span></h4>




<div class="description">
    <p>The XPath lexer is basically a single regular expression, along with
some helper functions to pop different types.</p>
</div>







<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line51">line 51</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="~stringifyObject"><span class="type-signature">(inner) </span>stringifyObject<span class="type-signature"></span></h4>




<div class="description">
    <p>For debugging and unit tests: returnjs a stringified version of the
argument.</p>
</div>







<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line1555">line 1555</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="~typeDeclarationBuilders"><span class="type-signature">(inner, constant) </span>typeDeclarationBuilders<span class="type-signature"> :TypeDeclarationBuilders</span></h4>






    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">TypeDeclarationBuilders</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line158">line 158</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id="~absoluteLocationPath"><span class="type-signature">(inner) </span>absoluteLocationPath<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[2] AbsoluteLocationPath::= '/' RelativeLocationPath? | AbbreviatedAbsoluteLocationPath
[10] AbbreviatedAbsoluteLocationPath::= '//' RelativeLocationPath</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line247">line 247</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~addDefaultPropsToComponent"><span class="type-signature">(inner) </span>addDefaultPropsToComponent<span class="signature">(component, defaultProps)</span><span class="type-signature"> &rarr; {void}</span></h4>
    

    



<div class="description">
    <p>Adds defaultProps to the component passed in.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>component</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The component to add the defaultProps to.</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>defaultProps</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array:<a href="global.html"></a>.&lt;Object:<a href="global.html"></a>></span>
|

<span class="param-type">'unresolved'</span>


            
            </td>

            

            

            <td class="description last"><p>defaultProps to add to the component or the string &quot;unresolved&quot;
if this component has defaultProps that can't be resolved.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html">node_modules/eslint-plugin-react/lib/util/defaultProps.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html#line79">line 79</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        


<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">void</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~additiveExpr"><span class="type-signature">(inner) </span>additiveExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[25] AdditiveExpr::= MultiplicativeExpr
| AdditiveExpr '+' MultiplicativeExpr
| AdditiveExpr '-' MultiplicativeExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line512">line 512</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~addressVector"><span class="type-signature">(inner) </span>addressVector<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Helper function for sortDocumentOrder. Returns a list of indices, from the
node to the root, of positions within parent.
For convenience, the node is the first element of the array.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line945">line 945</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~ancestorHelper"><span class="type-signature">(inner) </span>ancestorHelper<span class="signature">()</span><span class="type-signature"></span></h4>
    

    















<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line894">line 894</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~andExpr"><span class="type-signature">(inner) </span>andExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[22] AndExpr::= EqualityExpr | AndExpr 'and' EqualityExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line497">line 497</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~axisSpecifier"><span class="type-signature">(inner) </span>axisSpecifier<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[5] AxisSpecifier::= AxisName '::' | AbbreviatedAxisSpecifier
[6] AxisName::= 'ancestor' | 'ancestor-or-self' | 'attribute' | 'child'
| 'descendant' | 'descendant-or-self' | 'following'
| 'following-sibling' | 'namespace' | 'parent' |
| 'preceding' | 'preceding-sibling' | 'self'
[13] AbbreviatedAxisSpecifier::= '@'?</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line327">line 327</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~binaryL"><span class="type-signature">(inner) </span>binaryL<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>binaryL  ::= subExpr
| binaryL op subExpr
so a op b op c becomes ((a op b) op c)</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line201">line 201</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~binaryR"><span class="type-signature">(inner) </span>binaryR<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Too bad this is never used. If they made a ** operator (raise to power),
( we would use it.
binaryR  ::= subExpr
| subExpr op binaryR
so a op b op c becomes (a op (b op c))</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line222">line 222</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~buildReactDeclarationTypes"><span class="type-signature">(inner) </span>buildReactDeclarationTypes<span class="signature">(value, parentName)</span><span class="type-signature"> &rarr; {Object}</span></h4>
    

    



<div class="description">
    <p>Creates the representation of the React propTypes for the component.
The representation is used to verify nested used properties.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>Node of the PropTypes for the desired property</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>parentName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line390">line 390</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The representation of the declaration, empty object means
the property is declared without the need for further analysis.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Object</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~buildTypeAnnotationDeclarationTypes"><span class="type-signature">(inner) </span>buildTypeAnnotationDeclarationTypes<span class="signature">(annotation, parentName, seen<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {Object}</span></h4>
    

    



<div class="description">
    <p>Creates the representation of the React props type annotation for the component.
The representation is used to verify nested used properties.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>annotation</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last"><p>Type annotation for the props class property.</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>parentName</code></td>
            

            <td class="type">
            
                
<span class="param-type">String</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>seen</code></td>
            

            <td class="type">
            
                
<span class="param-type">Set:<a href="global.html"></a>.&lt;ASTNode:<a href="global.html"></a>></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line269">line 269</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The representation of the declaration, empty object means
the property is declared without the need for further analysis.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Object</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~declarePropTypesForIntersectionTypeAnnotation"><span class="type-signature">(inner) </span>declarePropTypesForIntersectionTypeAnnotation<span class="signature">(propTypes, declaredPropTypes)</span><span class="type-signature"> &rarr; {Boolean}</span></h4>
    

    



<div class="description">
    <p>Marks all props found inside IntersectionTypeAnnotation as declared.
Since InterSectionTypeAnnotations can be nested, this handles recursively.</p>
<p>Modifies the declaredPropTypes object</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>propTypes</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>declaredPropTypes</code></td>
            

            <td class="type">
            
                
<span class="param-type">Object</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line333">line 333</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>True if propTypes should be ignored (e.g. when a type can't be resolved, when it is imported)</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~declarePropTypesForObjectTypeAnnotation"><span class="type-signature">(inner) </span>declarePropTypesForObjectTypeAnnotation<span class="signature">(propTypes, declaredPropTypes)</span><span class="type-signature"> &rarr; {Boolean}</span></h4>
    

    



<div class="description">
    <p>Marks all props found inside ObjectTypeAnnotation as declared.</p>
<p>Modifies the declaredProperties object</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>propTypes</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>declaredPropTypes</code></td>
            

            <td class="type">
            
                
<span class="param-type">Object</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line295">line 295</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>True if propTypes should be ignored (e.g. when a type can't be resolved, when it is imported)</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~descendantDfs"><span class="type-signature">(inner) </span>descendantDfs<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>node-set, axis -&gt; node-set</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line838">line 838</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~equalityExpr"><span class="type-signature">(inner) </span>equalityExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[23] EqualityExpr::= RelationalExpr | EqualityExpr '=' RelationalExpr
| EqualityExpr '!=' RelationalExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line501">line 501</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~filterExpr"><span class="type-signature">(inner) </span>filterExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[20] FilterExpr::= PrimaryExpr | FilterExpr Predicate
aka. FilterExpr ::= PrimaryExpr Predicate*</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line477">line 477</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~filterInterfaceOrAliasByName"><span class="type-signature">(inner) </span>filterInterfaceOrAliasByName<span class="signature">(node, typeName)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    <p>Returns true if the interface or type alias declaration node name matches the type-name str</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>typeName</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line568">line 568</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        


<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~filterInterfaceOrTypeAlias"><span class="type-signature">(inner) </span>filterInterfaceOrTypeAlias<span class="signature">(node)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    <p>Returns true if the node is either a interface or type alias declaration</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line556">line 556</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        


<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~followingHelper"><span class="type-signature">(inner) </span>followingHelper<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>This axis is inefficient if there are many nodes in the nodeList.
But I think it's a pretty useless axis so it's ok.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line757">line 757</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~followingNode"><span class="type-signature">(inner) </span>followingNode<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Returns the next node in a document-order depth-first search.
See the definition of document order[1]:</p>
<ol>
<li>element</li>
<li>namespace nodes</li>
<li>attributes</li>
<li>children
[1]: http://www.w3.org/TR/xpath/#dt-document-order</li>
</ol>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line724">line 724</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~followingNonDescendantNode"><span class="type-signature">(inner) </span>followingNonDescendantNode<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Returns the next non-descendant node in document order.
This is the first node in following::node(), if node is the context.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line704">line 704</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~functionCall"><span class="type-signature">(inner) </span>functionCall<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[16] FunctionCall::= FunctionName '(' ( Argument ( ',' Argument )* )? ')'
[17] Argument::= Expr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line421">line 421</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~getDefaultPropsFromObjectExpression"><span class="type-signature">(inner) </span>getDefaultPropsFromObjectExpression<span class="signature">(objectExpression)</span><span class="type-signature"> &rarr; {Object|string}</span></h4>
    

    



<div class="description">
    <p>Extracts a DefaultProp from an ObjectExpression node.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>objectExpression</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>ObjectExpression node.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html">node_modules/eslint-plugin-react/lib/util/defaultProps.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html#line46">line 46</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>Object representation of a defaultProp, to be consumed by
<code>addDefaultPropsToComponent</code>, or string &quot;unresolved&quot;, if the defaultProps
from this ObjectExpression can't be resolved.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Object</span>
|

<span class="param-type">string</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~getInTypeScope"><span class="type-signature">(inner) </span>getInTypeScope<span class="signature">(key)</span><span class="type-signature"> &rarr; {ASTNode}</span></h4>
    

    



<div class="description">
    <p>Gets a node from the scope.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>key</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last"><p>The name of the identifier to access.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line132">line 132</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The ASTNode associated with the given identifier.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ASTNode</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~getLeftMostTypeName"><span class="type-signature">(inner) </span>getLeftMostTypeName<span class="signature">(node)</span><span class="type-signature"> &rarr; {string|undefined}</span></h4>
    

    



<div class="description">
    <p>Returns the left most typeName of a node, e.g: FC<Props>, React.FC<Props>
The representation is used to verify nested used properties.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line541">line 541</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        


<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">string</span>
|

<span class="param-type">undefined</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~handleFunctionLikeExpressions"><span class="type-signature">(inner) </span>handleFunctionLikeExpressions<span class="signature">(node)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Handle both stateless functions and setState updater functions.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>We expect either an ArrowFunctionExpression,
FunctionDeclaration, or FunctionExpression</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html">node_modules/eslint-plugin-react/lib/util/usedPropTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html#line447">line 447</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~hasCustomValidator"><span class="type-signature">(inner) </span>hasCustomValidator<span class="signature">(validator)</span><span class="type-signature"> &rarr; {Boolean}</span></h4>
    

    



<div class="description">
    <p>Checks if prop should be validated by plugin-react-proptypes</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>validator</code></td>
            

            <td class="type">
            
                
<span class="param-type">String</span>


            
            </td>

            

            

            <td class="description last"><p>Name of validator to check.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line152">line 152</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>True if validator should be checked by custom validator.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~isAnnotatedClassPropsDeclaration"><span class="type-signature">(inner) </span>isAnnotatedClassPropsDeclaration<span class="signature">(node)</span><span class="type-signature"> &rarr; {Boolean}</span></h4>
    

    



<div class="description">
    <p>Checks if we are declaring a <code>props</code> class property with a flow type annotation.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The AST node being checked.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line1106">line 1106</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>True if the node is a type annotated props declaration, false if not.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~locationPath"><span class="type-signature">(inner) </span>locationPath<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[1] LocationPath::= RelativeLocationPath | AbsoluteLocationPath
e.g. a, a/b, //a/b</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line240">line 240</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~markAnnotatedFunctionArgumentsAsDeclared"><span class="type-signature">(inner) </span>markAnnotatedFunctionArgumentsAsDeclared<span class="signature">(node)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>We expect either an ArrowFunctionExpression,
FunctionDeclaration, or FunctionExpression</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line995">line 995</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~markDefaultPropsAsUnresolved"><span class="type-signature">(inner) </span>markDefaultPropsAsUnresolved<span class="signature">(component)</span><span class="type-signature"> &rarr; {void}</span></h4>
    

    



<div class="description">
    <p>Marks a component's DefaultProps declaration as &quot;unresolved&quot;. A component's DefaultProps is
marked as &quot;unresolved&quot; if we cannot safely infer the values of its defaultProps declarations
without risking false negatives.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>component</code></td>
            

            <td class="type">
            
                
<span class="param-type">Object</span>


            
            </td>

            

            

            <td class="description last"><p>The component to mark.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html">node_modules/eslint-plugin-react/lib/util/defaultProps.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html#line66">line 66</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        


<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">void</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~markDestructuredFunctionArgumentsAsUsed"><span class="type-signature">(inner) </span>markDestructuredFunctionArgumentsAsUsed<span class="signature">(node)</span><span class="type-signature"></span></h4>
    

    











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>We expect either an ArrowFunctionExpression,
FunctionDeclaration, or FunctionExpression</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html">node_modules/eslint-plugin-react/lib/util/usedPropTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html#line422">line 422</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~markPropTypesAsDeclared"><span class="type-signature">(inner) </span>markPropTypesAsDeclared<span class="signature">(node, propTypes)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Mark a prop type as declared</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The AST node being checked.</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>propTypes</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The AST node containing the proptypes</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line851">line 851</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~markPropTypesAsUsed"><span class="type-signature">(inner) </span>markPropTypesAsUsed<span class="signature">(node, parentNames<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Mark a prop type as used</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            

            <td class="description last"><p>The AST node being marked.</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>parentNames</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array:<a href="global.html"></a>.&lt;string:<a href="global.html"></a>></span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            

            <td class="description last"></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html">node_modules/eslint-plugin-react/lib/util/usedPropTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_usedPropTypes.js.html#line301">line 301</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~mergeNodeLists"><span class="type-signature">(inner) </span>mergeNodeLists<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>The merge in merge-sort.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line1045">line 1045</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~multiplicativeExpr"><span class="type-signature">(inner) </span>multiplicativeExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[26] MultiplicativeExpr::= UnaryExpr
| MultiplicativeExpr MultiplyOperator UnaryExpr
| MultiplicativeExpr 'div' UnaryExpr
| MultiplicativeExpr 'mod' UnaryExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line518">line 518</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~nodeAndAncestors"><span class="type-signature">(inner) </span>nodeAndAncestors<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Returns an array containing all the ancestors down to a node.
The array starts with document.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line1022">line 1022</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~NodeMatcher"><span class="type-signature">(inner) </span>NodeMatcher<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Matcher used in the axes.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line642">line 642</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~NodeMultiSet"><span class="type-signature">(inner) </span>NodeMultiSet<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>The NodeMultiSet is a helper class to help generate
{nodes:[], pos:[], lasts:[]} structures. It is useful for the
descendant, descendant-or-self, following-sibling, and
preceding-sibling axes for which we can use a stack to organize things.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line574">line 574</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~nodeTypeTest"><span class="type-signature">(inner) </span>nodeTypeTest<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[7] NodeTest::= NameTest | NodeType '(' ')' | 'processing-instruction' '(' Literal ')'
[38] NodeType::= 'comment' | 'text' | 'processing-instruction' | 'node'
I've split nodeTypeTest from nodeNameTest for convenience.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line344">line 344</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~optimize"><span class="type-signature">(inner) </span>optimize<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Some things I've been considering:</p>
<ol>
<li>a//b becomes a/descendant::b if there's no predicate that uses
position() or last()</li>
<li>axis[pred]: when pred doesn't use position, evaluate it just once per
node in the node-set rather than once per (node, position, last).
For more optimizations, look up Gecko's optimizer:
http://mxr.mozilla.org/mozilla-central/source/content/xslt/src/xpath/txXPathOptimizer.cpp</li>
</ol>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line550">line 550</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~orExpr"><span class="type-signature">(inner) </span>orExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[21] OrExpr::= AndExpr | OrExpr 'or' AndExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line489">line 489</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~pathExpr"><span class="type-signature">(inner) </span>pathExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[19] PathExpr ::= LocationPath
| FilterExpr
| FilterExpr '/' RelativeLocationPath
| FilterExpr '//' RelativeLocationPath
Unlike most other nodes, this one always generates a node because
at this point all reverse nodesets must turn into a forward nodeset</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line456">line 456</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~precedingNode"><span class="type-signature">(inner) </span>precedingNode<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Returns the previous node in document order (excluding attributes
and namespace nodes).</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line740">line 740</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~predicate"><span class="type-signature">(inner) </span>predicate<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[8] Predicate::= '[' PredicateExpr ']'
[9] PredicateExpr::= Expr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line373">line 373</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~primaryExpr"><span class="type-signature">(inner) </span>primaryExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[15] PrimaryExpr::= VariableReference | '(' Expr ')' | Literal | Number | FunctionCall
e.g. $x,  (3+4),  &quot;hi&quot;,  32,  f(x)</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line391">line 391</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~relationalExpr"><span class="type-signature">(inner) </span>relationalExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[24] RelationalExpr::= AdditiveExpr | RelationalExpr '&lt;' AdditiveExpr
| RelationalExpr '&gt;' AdditiveExpr
| RelationalExpr '&lt;=' AdditiveExpr
| RelationalExpr '&gt;=' AdditiveExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line507">line 507</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~relativeLocationPath"><span class="type-signature">(inner) </span>relativeLocationPath<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[3] RelativeLocationPath::= Step | RelativeLocationPath '/' Step |
| AbbreviatedRelativeLocationPath
[11] AbbreviatedRelativeLocationPath::= RelativeLocationPath '//' Step
e.g. p/a, etc.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line261">line 261</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~resolveNodeValue"><span class="type-signature">(inner) </span>resolveNodeValue<span class="signature">(node)</span><span class="type-signature"> &rarr; {ASTNode|null}</span></h4>
    

    



<div class="description">
    <p>Try to resolve the node passed in to a variable in the current scope. If the node passed in is not
an Identifier, then the node is simply returned.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The node to resolve.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html">node_modules/eslint-plugin-react/lib/util/defaultProps.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_defaultProps.js.html#line25">line 25</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>Return null if the value could not be resolved, ASTNode otherwise.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ASTNode</span>
|

<span class="param-type">null</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~resolveSuperParameterPropsType"><span class="type-signature">(inner) </span>resolveSuperParameterPropsType<span class="signature">(node)</span><span class="type-signature"> &rarr; {ASTNode}</span></h4>
    

    



<div class="description">
    <p>Resolve the type annotation for a given class declaration node with superTypeParameters.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The annotation or a node containing the type annotation.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line1079">line 1079</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The resolved type annotation for the node.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ASTNode</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~resolveTypeAnnotation"><span class="type-signature">(inner) </span>resolveTypeAnnotation<span class="signature">(node)</span><span class="type-signature"> &rarr; {ASTNode}</span></h4>
    

    



<div class="description">
    <p>Resolve the type annotation for a given node.
Flow annotations are sometimes wrapped in outer <code>TypeAnnotation</code>
and <code>NullableTypeAnnotation</code> nodes which obscure the annotation we're
interested in.
This method also resolves type aliases where possible.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The annotation or a node containing the type annotation.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line249">line 249</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The resolved type annotation for the node.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ASTNode</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~resolveValueForIdentifierNode"><span class="type-signature">(inner) </span>resolveValueForIdentifierNode<span class="signature">(node, callback)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Resolve node of type Identifier when building declaration types.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>callback</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last"><p>called with the resolved value only if resolved.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line366">line 366</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~setInTypeScope"><span class="type-signature">(inner) </span>setInTypeScope<span class="signature">(key, value)</span><span class="type-signature"> &rarr; {ASTNode}</span></h4>
    

    



<div class="description">
    <p>Sets the new value in the scope.</p>
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>key</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last"><p>The name of the identifier to access</p></td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">ASTNode</span>


            
            </td>

            

            

            <td class="description last"><p>The new value for the identifier.</p></td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line142">line 142</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The ASTNode associated with the given identifier.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">ASTNode</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~sortNodeMultiSet"><span class="type-signature">(inner) </span>sortNodeMultiSet<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>Sort node multiset. Does not do any de-duping.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line1000">line 1000</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~step"><span class="type-signature">(inner) </span>step<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[4] Step::= AxisSpecifier NodeTest Predicate* | AbbreviatedStep
[12] AbbreviatedStep::= '.' | '..'
e.g. @href, self::p, p, a[@href], ., ..</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line287">line 287</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~typeScope"><span class="type-signature">(inner) </span>typeScope<span class="signature">()</span><span class="type-signature"> &rarr; {Object}</span></h4>
    

    



<div class="description">
    <p>Returns the full scope.</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html">node_modules/eslint-plugin-react/lib/util/propTypes.js</a>, <a href="node_modules_eslint-plugin-react_lib_util_propTypes.js.html#line123">line 123</a>
    </li></ul></dd>
    

    

    

    
</dl>















<h5>Returns:</h5>

        
<div class="param-desc">
    <p>The whole scope.</p>
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Object</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="~unaryExpr"><span class="type-signature">(inner) </span>unaryExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[27] UnaryExpr::= UnionExpr | '-' UnaryExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line521">line 521</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
            

    

    
    <h4 class="name" id="~unionExpr"><span class="type-signature">(inner) </span>unionExpr<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    <p>[18] UnionExpr::= PathExpr | UnionExpr '|' PathExpr</p>
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html">node_modules/jsdom/lib/jsdom/level3/xpath.js</a>, <a href="node_modules_jsdom_lib_jsdom_level3_xpath.js.html#line448">line 448</a>
    </li></ul></dd>
    

    

    

    
</dl>




















        
    

    

    
</article>

</section>




</div>

<nav>
    <h2><a href="index.html">Home</a></h2><h3>Modules</h3><ul><li><a href="module-plugins.html">plugins</a></li><li><a href="module-workbox-background-sync.html">workbox-background-sync</a></li><li><a href="module-workbox-broadcast-update.html">workbox-broadcast-update</a></li><li><a href="module-workbox-cacheable-response.html">workbox-cacheable-response</a></li><li><a href="module-workbox-core.html">workbox-core</a></li><li><a href="module-workbox-expiration.html">workbox-expiration</a></li><li><a href="module-workbox-google-analytics.html">workbox-google-analytics</a></li><li><a href="module-workbox-navigation-preload.html">workbox-navigation-preload</a></li><li><a href="module-workbox-precaching.html">workbox-precaching</a></li><li><a href="module-workbox-range-requests.html">workbox-range-requests</a></li><li><a href="module-workbox-recipes.html">workbox-recipes</a></li><li><a href="module-workbox-routing.html">workbox-routing</a></li><li><a href="module-workbox-strategies.html">workbox-strategies</a></li><li><a href="module-workbox-streams.html">workbox-streams</a></li><li><a href="module-workbox-window.html">workbox-window</a></li></ul><h3>Classes</h3><ul><li><a href="global.html#ArraySet">ArraySet</a></li><li><a href="global.html#BasicSourceMapConsumer">BasicSourceMapConsumer</a></li><li><a href="Components.html">Components</a></li><li><a href="HeaderList.html">HeaderList</a></li><li><a href="global.html#IndexedSourceMapConsumer">IndexedSourceMapConsumer</a></li><li><a href="Limiter.html">Limiter</a></li><li><a href="global.html#MappingList">MappingList</a></li><li><a href="module.html#.exports">exports</a></li><li><a href="PerMessageDeflate.html">PerMessageDeflate</a></li><li><a href="QueueStore.html">QueueStore</a></li><li><a href="Receiver.html">Receiver</a></li><li><a href="SaxesParser.html">SaxesParser</a></li><li><a href="Sender.html">Sender</a></li><li><a href="global.html#SourceMapGenerator">SourceMapGenerator</a></li><li><a href="global.html#SourceNode">SourceNode</a></li><li><a href="StorableRequest.html">StorableRequest</a></li><li><a href="ValidationError.html">ValidationError</a></li><li><a href="WebSocket.html">WebSocket</a></li><li><a href="WebSocketServer.html">WebSocketServer</a></li><li><a href="workbox-background-sync.BackgroundSyncPlugin.html">BackgroundSyncPlugin</a></li><li><a href="workbox-background-sync.Queue.html">Queue</a></li><li><a href="workbox-broadcast-update.BroadcastCacheUpdate.html">BroadcastCacheUpdate</a></li><li><a href="workbox-broadcast-update.BroadcastUpdatePlugin.html">BroadcastUpdatePlugin</a></li><li><a href="workbox-cacheable-response.CacheableResponse.html">CacheableResponse</a></li><li><a href="workbox-cacheable-response.CacheableResponsePlugin.html">CacheableResponsePlugin</a></li><li><a href="workbox-expiration.CacheExpiration.html">CacheExpiration</a></li><li><a href="workbox-expiration.ExpirationPlugin.html">ExpirationPlugin</a></li><li><a href="workbox-precaching.PrecacheController.html">PrecacheController</a></li><li><a href="workbox-precaching.PrecacheFallbackPlugin.html">PrecacheFallbackPlugin</a></li><li><a href="workbox-precaching.PrecacheRoute.html">PrecacheRoute</a></li><li><a href="workbox-precaching.PrecacheStrategy.html">PrecacheStrategy</a></li><li><a href="workbox-range-requests.RangeRequestsPlugin.html">RangeRequestsPlugin</a></li><li><a href="workbox-routing.NavigationRoute.html">NavigationRoute</a></li><li><a href="workbox-routing.RegExpRoute.html">RegExpRoute</a></li><li><a href="workbox-routing.Route.html">Route</a></li><li><a href="workbox-routing.Router.html">Router</a></li><li><a href="workbox-strategies.CacheFirst.html">CacheFirst</a></li><li><a href="workbox-strategies.CacheOnly.html">CacheOnly</a></li><li><a href="workbox-strategies.NetworkFirst.html">NetworkFirst</a></li><li><a href="workbox-strategies.NetworkOnly.html">NetworkOnly</a></li><li><a href="workbox-strategies.StaleWhileRevalidate.html">StaleWhileRevalidate</a></li><li><a href="workbox-strategies.Strategy.html">Strategy</a></li><li><a href="workbox-strategies.StrategyHandler.html">StrategyHandler</a></li><li><a href="workbox-window.Workbox.html">Workbox</a></li></ul><h3>Events</h3><ul><li><a href="workbox-window.Workbox.html#event:activated">activated</a></li><li><a href="workbox-window.Workbox.html#event:controlling">controlling</a></li><li><a href="workbox-window.Workbox.html#event:installed">installed</a></li><li><a href="workbox-window.Workbox.html#event:message">message</a></li><li><a href="workbox-window.Workbox.html#event:redundant">redundant</a></li><li><a href="workbox-window.Workbox.html#event:waiting">waiting</a></li></ul><h3>Mixins</h3><ul><li><a href="EventTarget.html">EventTarget</a></li></ul><h3>Global</h3><ul><li><a href="global.html"></a></li><li><a href="global.html#_isValidUTF8">_isValidUTF8</a></li><li><a href="global.html#_mask">_mask</a></li><li><a href="global.html#_unmask">_unmask</a></li><li><a href="global.html#addAbsolutePathKeyword">addAbsolutePathKeyword</a></li><li><a href="global.html#addConstants">addConstants</a></li><li><a href="global.html#ajv">ajv</a></li><li><a href="global.html#all">all</a></li><li><a href="global.html#analyzeFiles">analyzeFiles</a></li><li><a href="global.html#arraySchema">arraySchema</a></li><li><a href="global.html#attributesComparator">attributesComparator</a></li><li><a href="global.html#cache">cache</a></li><li><a href="global.html#canApplyNot">canApplyNot</a></li><li><a href="global.html#captureJsDoc">captureJsDoc</a></li><li><a href="global.html#captureTomDoc">captureTomDoc</a></li><li><a href="global.html#changePluginsState">changePluginsState</a></li><li><a href="global.html#checkCreateProps">checkCreateProps</a></li><li><a href="global.html#checkIsDir">checkIsDir</a></li><li><a href="global.html#checkOptimizeFileError">checkOptimizeFileError</a></li><li><a href="global.html#checkWriteFileError">checkWriteFileError</a></li><li><a href="global.html#childContext">childContext</a></li><li><a href="global.html#cleanPseudos">cleanPseudos</a></li><li><a href="global.html#cleanupOutData">cleanupOutData</a></li><li><a href="global.html#clearAll">clearAll</a></li><li><a href="global.html#clearCache">clearCache</a></li><li><a href="global.html#coerce">coerce</a></li><li><a href="global.html#colorConvert">colorConvert</a></li><li><a href="global.html#colors">colors</a></li><li><a href="global.html#compareByGeneratedPositionsDeflated">compareByGeneratedPositionsDeflated</a></li><li><a href="global.html#compareByGeneratedPositionsInflated">compareByGeneratedPositionsInflated</a></li><li><a href="global.html#compareByOriginalPositions">compareByOriginalPositions</a></li><li><a href="global.html#compareSimpleSelectorNode">compareSimpleSelectorNode</a></li><li><a href="global.html#compareSpecificity">compareSpecificity</a></li><li><a href="global.html#compile">compile</a></li><li><a href="global.html#COMPONENT_ATTRIBUTE_MAP">COMPONENT_ATTRIBUTE_MAP</a></li><li><a href="global.html#computeRelativeURL">computeRelativeURL</a></li><li><a href="global.html#computeSourceURL">computeSourceURL</a></li><li><a href="global.html#concat">concat</a></li><li><a href="global.html#CONFIG">CONFIG</a></li><li><a href="global.html#containsCallExpression">containsCallExpression</a></li><li><a href="global.html#convertToMixed">convertToMixed</a></li><li><a href="global.html#convertToRelative">convertToRelative</a></li><li><a href="global.html#convertToShorts">convertToShorts</a></li><li><a href="global.html#convertToUse">convertToUse</a></li><li><a href="global.html#convertTransform">convertTransform</a></li><li><a href="global.html#create">create</a></li><li><a href="global.html#createDebug">createDebug</a></li><li><a href="global.html#CreateEmployee">CreateEmployee</a></li><li><a href="global.html#createHtmlDocument">createHtmlDocument</a></li><li><a href="global.html#createSafeHandler">createSafeHandler</a></li><li><a href="global.html#createWebSocketStream">createWebSocketStream</a></li><li><a href="global.html#createWritableStdioStream">createWritableStdioStream</a></li><li><a href="global.html#csstreeToStyleDeclaration">csstreeToStyleDeclaration</a></li><li><a href="global.html#CurrentEmployees">CurrentEmployees</a></li><li><a href="global.html#data2Path">data2Path</a></li><li><a href="global.html#Datepicker">Datepicker</a></li><li><a href="global.html#decode">decode</a></li><li><a href="global.html#decodeSVGDatauri">decodeSVGDatauri</a></li><li><a href="global.html#DEFAULT_FORM_COMPONENTS">DEFAULT_FORM_COMPONENTS</a></li><li><a href="global.html#DEFAULT_LINK_COMPONENTS">DEFAULT_LINK_COMPONENTS</a></li><li><a href="global.html#define">define</a></li><li><a href="global.html#definePrecision">definePrecision</a></li><li><a href="global.html#deleteCacheFile">deleteCacheFile</a></li><li><a href="global.html#destroy">destroy</a></li><li><a href="global.html#determineUsage">determineUsage</a></li><li><a href="global.html#disable">disable</a></li><li><a href="global.html#domSymbolTree">domSymbolTree</a></li><li><a href="global.html#doQuickSort">doQuickSort</a></li><li><a href="global.html#Dropdown">Dropdown</a></li><li><a href="global.html#elementType">elementType</a></li><li><a href="global.html#enable">enable</a></li><li><a href="global.html#enabled">enabled</a></li><li><a href="global.html#encode">encode</a></li><li><a href="global.html#encodeSVGDatauri">encodeSVGDatauri</a></li><li><a href="global.html#ensureDirectory">ensureDirectory</a></li><li><a href="global.html#enumArraySchema">enumArraySchema</a></li><li><a href="global.html#env">env</a></li><li><a href="global.html#error">error</a></li><li><a href="global.html#errorMessage">errorMessage</a></li><li><a href="global.html#eventHandlersByType">eventHandlersByType</a></li><li><a href="global.html#EVENTS">EVENTS</a></li><li><a href="global.html#exportList">exportList</a></li><li><a href="global.html#extendConfig">extendConfig</a></li><li><a href="global.html#extract">extract</a></li><li><a href="global.html#extractLiteral">extractLiteral</a></li><li><a href="global.html#extractRefs">extractRefs</a></li><li><a href="global.html#extractValueFromArrayExpression">extractValueFromArrayExpression</a></li><li><a href="global.html#extractValueFromAssignmentExpression">extractValueFromAssignmentExpression</a></li><li><a href="global.html#extractValueFromBinaryExpression">extractValueFromBinaryExpression</a></li><li><a href="global.html#extractValueFromBindExpression">extractValueFromBindExpression</a></li><li><a href="global.html#extractValueFromCallExpression">extractValueFromCallExpression</a></li><li><a href="global.html#extractValueFromChainExpression">extractValueFromChainExpression</a></li><li><a href="global.html#extractValueFromConditionalExpression">extractValueFromConditionalExpression</a></li><li><a href="global.html#extractValueFromFunctionExpression">extractValueFromFunctionExpression</a></li><li><a href="global.html#extractValueFromIdentifier">extractValueFromIdentifier</a></li><li><a href="global.html#extractValueFromJSXElement">extractValueFromJSXElement</a></li><li><a href="global.html#extractValueFromJSXFragment">extractValueFromJSXFragment</a></li><li><a href="global.html#extractValueFromJSXText">extractValueFromJSXText</a></li><li><a href="global.html#extractValueFromLiteral">extractValueFromLiteral</a></li><li><a href="global.html#extractValueFromLogicalExpression">extractValueFromLogicalExpression</a></li><li><a href="global.html#extractValueFromMemberExpression">extractValueFromMemberExpression</a></li><li><a href="global.html#extractValueFromNewExpression">extractValueFromNewExpression</a></li><li><a href="global.html#extractValueFromObjectExpression">extractValueFromObjectExpression</a></li><li><a href="global.html#extractValueFromOptionalCallExpression">extractValueFromOptionalCallExpression</a></li><li><a href="global.html#extractValueFromOptionalMemberExpression">extractValueFromOptionalMemberExpression</a></li><li><a href="global.html#extractValueFromSequenceExpression">extractValueFromSequenceExpression</a></li><li><a href="global.html#extractValueFromSpreadElement">extractValueFromSpreadElement</a></li><li><a href="global.html#extractValueFromTaggedTemplateExpression">extractValueFromTaggedTemplateExpression</a></li><li><a href="global.html#extractValueFromTemplateLiteral">extractValueFromTemplateLiteral</a></li><li><a href="global.html#extractValueFromThisExpression">extractValueFromThisExpression</a></li><li><a href="global.html#extractValueFromTSNonNullExpression">extractValueFromTSNonNullExpression</a></li><li><a href="global.html#extractValueFromTypeCastExpression">extractValueFromTypeCastExpression</a></li><li><a href="global.html#extractValueFromUnaryExpression">extractValueFromUnaryExpression</a></li><li><a href="global.html#extractValueFromUpdateExpression">extractValueFromUpdateExpression</a></li><li><a href="global.html#fd">fd</a></li><li><a href="global.html#filterByMqs">filterByMqs</a></li><li><a href="global.html#filterByPseudos">filterByPseudos</a></li><li><a href="global.html#filterChildren">filterChildren</a></li><li><a href="global.html#filterErrors">filterErrors</a></li><li><a href="global.html#filterMax">filterMax</a></li><li><a href="global.html#filters">filters</a></li><li><a href="global.html#findAllChildren">findAllChildren</a></li><li><a href="global.html#findArcAngle">findArcAngle</a></li><li><a href="global.html#findChangedFilesUsingCommand">findChangedFilesUsingCommand</a></li><li><a href="global.html#findCircle">findCircle</a></li><li><a href="global.html#findFirstTypedSchema">findFirstTypedSchema</a></li><li><a href="global.html#findReturnStatement">findReturnStatement</a></li><li><a href="global.html#findVariable">findVariable</a></li><li><a href="global.html#findVariableByName">findVariableByName</a></li><li><a href="global.html#fixPropTypesSort">fixPropTypesSort</a></li><li><a href="global.html#flattenPluginsCbk">flattenPluginsCbk</a></li><li><a href="global.html#flattenToSelectors">flattenToSelectors</a></li><li><a href="global.html#floatDigits">floatDigits</a></li><li><a href="global.html#fmtLong">fmtLong</a></li><li><a href="global.html#fmtShort">fmtShort</a></li><li><a href="global.html#fn">fn</a></li><li><a href="global.html#Footer">Footer</a></li><li><a href="global.html#Form">Form</a></li><li><a href="global.html#format">format</a></li><li><a href="global.html#formatArgs">formatArgs</a></li><li><a href="global.html#formatHints">formatHints</a></li><li><a href="global.html#formatters">formatters</a></li><li><a href="global.html#fromVLQSigned">fromVLQSigned</a></li><li><a href="global.html#generatedPositionAfter">generatedPositionAfter</a></li><li><a href="global.html#generateErrorMessageWithParentName">generateErrorMessageWithParentName</a></li><li><a href="global.html#generateID">generateID</a></li><li><a href="global.html#generateLocalNames">generateLocalNames</a></li><li><a href="global.html#get">get</a></li><li><a href="global.html#getArg">getArg</a></li><li><a href="global.html#getArticle">getArticle</a></li><li><a href="global.html#getClosestMatchingParent">getClosestMatchingParent</a></li><li><a href="global.html#getComponentProperties">getComponentProperties</a></li><li><a href="global.html#getComputedRole">getComputedRole</a></li><li><a href="global.html#getCreateClassFromContext">getCreateClassFromContext</a></li><li><a href="global.html#getCssStr">getCssStr</a></li><li><a href="global.html#getCubicBezierPoint">getCubicBezierPoint</a></li><li><a href="global.html#getDistance">getDistance</a></li><li><a href="global.html#getErrorData">getErrorData</a></li><li><a href="global.html#getErrorFor">getErrorFor</a></li><li><a href="global.html#getExplicitRole">getExplicitRole</a></li><li><a href="global.html#getFilenameFromUrl">getFilenameFromUrl</a></li><li><a href="global.html#getFilesDescriptions">getFilesDescriptions</a></li><li><a href="global.html#getFirstNodeInLine">getFirstNodeInLine</a></li><li><a href="global.html#getFragmentFromContext">getFragmentFromContext</a></li><li><a href="global.html#getFromContext">getFromContext</a></li><li><a href="global.html#getGroupsOfSortableAttributes">getGroupsOfSortableAttributes</a></li><li><a href="global.html#getHash">getHash</a></li><li><a href="global.html#getHeaderFromRequest">getHeaderFromRequest</a></li><li><a href="global.html#getHeaderFromResponse">getHeaderFromResponse</a></li><li><a href="global.html#getHeaderNames">getHeaderNames</a></li><li><a href="global.html#getHints">getHints</a></li><li><a href="global.html#getIDstring">getIDstring</a></li><li><a href="global.html#getImplicitRole">getImplicitRole</a></li><li><a href="global.html#getImplicitRoleForAnchor">getImplicitRoleForAnchor</a></li><li><a href="global.html#getImplicitRoleForArea">getImplicitRoleForArea</a></li><li><a href="global.html#getImplicitRoleForArticle">getImplicitRoleForArticle</a></li><li><a href="global.html#getImplicitRoleForAside">getImplicitRoleForAside</a></li><li><a href="global.html#getImplicitRoleForBody">getImplicitRoleForBody</a></li><li><a href="global.html#getImplicitRoleForButton">getImplicitRoleForButton</a></li><li><a href="global.html#getImplicitRoleForDatalist">getImplicitRoleForDatalist</a></li><li><a href="global.html#getImplicitRoleForDetails">getImplicitRoleForDetails</a></li><li><a href="global.html#getImplicitRoleForDialog">getImplicitRoleForDialog</a></li><li><a href="global.html#getImplicitRoleForForm">getImplicitRoleForForm</a></li><li><a href="global.html#getImplicitRoleForH1">getImplicitRoleForH1</a></li><li><a href="global.html#getImplicitRoleForH2">getImplicitRoleForH2</a></li><li><a href="global.html#getImplicitRoleForH3">getImplicitRoleForH3</a></li><li><a href="global.html#getImplicitRoleForH4">getImplicitRoleForH4</a></li><li><a href="global.html#getImplicitRoleForH5">getImplicitRoleForH5</a></li><li><a href="global.html#getImplicitRoleForH6">getImplicitRoleForH6</a></li><li><a href="global.html#getImplicitRoleForHr">getImplicitRoleForHr</a></li><li><a href="global.html#getImplicitRoleForImg">getImplicitRoleForImg</a></li><li><a href="global.html#getImplicitRoleForInput">getImplicitRoleForInput</a></li><li><a href="global.html#getImplicitRoleForLi">getImplicitRoleForLi</a></li><li><a href="global.html#getImplicitRoleForLink">getImplicitRoleForLink</a></li><li><a href="global.html#getImplicitRoleForMenu">getImplicitRoleForMenu</a></li><li><a href="global.html#getImplicitRoleForMenuitem">getImplicitRoleForMenuitem</a></li><li><a href="global.html#getImplicitRoleForMeter">getImplicitRoleForMeter</a></li><li><a href="global.html#getImplicitRoleForNav">getImplicitRoleForNav</a></li><li><a href="global.html#getImplicitRoleForOl">getImplicitRoleForOl</a></li><li><a href="global.html#getImplicitRoleForOption">getImplicitRoleForOption</a></li><li><a href="global.html#getImplicitRoleForOutput">getImplicitRoleForOutput</a></li><li><a href="global.html#getImplicitRoleForProgress">getImplicitRoleForProgress</a></li><li><a href="global.html#getImplicitRoleForSection">getImplicitRoleForSection</a></li><li><a href="global.html#getImplicitRoleForSelect">getImplicitRoleForSelect</a></li><li><a href="global.html#getImplicitRoleForTbody">getImplicitRoleForTbody</a></li><li><a href="global.html#getImplicitRoleForTextarea">getImplicitRoleForTextarea</a></li><li><a href="global.html#getImplicitRoleForTfoot">getImplicitRoleForTfoot</a></li><li><a href="global.html#getImplicitRoleForThead">getImplicitRoleForThead</a></li><li><a href="global.html#getImplicitRoleForUl">getImplicitRoleForUl</a></li><li><a href="global.html#getIntersection">getIntersection</a></li><li><a href="global.html#getKey">getKey</a></li><li><a href="global.html#getKeyValue">getKeyValue</a></li><li><a href="global.html#getLatestVariableDefinition">getLatestVariableDefinition</a></li><li><a href="global.html#getLiteralPropValue">getLiteralPropValue</a></li><li><a href="global.html#getLiteralValue">getLiteralValue</a></li><li><a href="global.html#getMatrixData">getMatrixData</a></li><li><a href="global.html#getMemberPropertyName">getMemberPropertyName</a></li><li><a href="global.html#getMethodsOrder">getMethodsOrder</a></li><li><a href="global.html#getParentES5Component">getParentES5Component</a></li><li><a href="global.html#getParentES6Component">getParentES6Component</a></li><li><a href="global.html#getPaths">getPaths</a></li><li><a href="global.html#getProp">getProp</a></li><li><a href="global.html#getPropertyName">getPropertyName</a></li><li><a href="global.html#getPropertyNameNode">getPropertyNameNode</a></li><li><a href="global.html#getPropValue">getPropValue</a></li><li><a href="global.html#getSchemaNonTypes">getSchemaNonTypes</a></li><li><a href="global.html#getShapeProperties">getShapeProperties</a></li><li><a href="global.html#getStandardName">getStandardName</a></li><li><a href="global.html#getSuggestion">getSuggestion</a></li><li><a href="global.html#getTabIndex">getTabIndex</a></li><li><a href="global.html#getTagName">getTagName</a></li><li><a href="global.html#getTokenBeforeClosingBracket">getTokenBeforeClosingBracket</a></li><li><a href="global.html#getUpdated">getUpdated</a></li><li><a href="global.html#getValue">getValue</a></li><li><a href="global.html#getValueContentRangeHeader">getValueContentRangeHeader</a></li><li><a href="global.html#getValueName">getValueName</a></li><li><a href="global.html#getVariable">getVariable</a></li><li><a href="global.html#getVariableNamesInScope">getVariableNamesInScope</a></li><li><a href="global.html#GlobalFilter">GlobalFilter</a></li><li><a href="global.html#groupChildrenByFirstChild">groupChildrenByFirstChild</a></li><li><a href="global.html#hasAnyProp">hasAnyProp</a></li><li><a href="global.html#hasEveryProp">hasEveryProp</a></li><li><a href="global.html#hasFileChanged">hasFileChanged</a></li><li><a href="global.html#hasLabellingProp">hasLabellingProp</a></li><li><a href="global.html#hasNotInSchema">hasNotInSchema</a></li><li><a href="global.html#hasProp">hasProp</a></li><li><a href="global.html#hasSpreadOperator">hasSpreadOperator</a></li><li><a href="global.html#hasTransform">hasTransform</a></li><li><a href="global.html#Header">Header</a></li><li><a href="global.html#helperAddEmployee">helperAddEmployee</a></li><li><a href="global.html#HTML_ELEMENTS">HTML_ELEMENTS</a></li><li><a href="global.html#idMatchesPrefix">idMatchesPrefix</a></li><li><a href="global.html#importList">importList</a></li><li><a href="global.html#inConstructor">inConstructor</a></li><li><a href="global.html#indent">indent</a></li><li><a href="global.html#init">init</a></li><li><a href="global.html#inLifeCycleMethod">inLifeCycleMethod</a></li><li><a href="global.html#inspectOpts">inspectOpts</a></li><li><a href="global.html#inspectorLog">inspectorLog</a></li><li><a href="global.html#intersectInheritableAttrs">intersectInheritableAttrs</a></li><li><a href="global.html#isAlways">isAlways</a></li><li><a href="global.html#isAnnotatedFunctionPropsDeclaration">isAnnotatedFunctionPropsDeclaration</a></li><li><a href="global.html#isArc">isArc</a></li><li><a href="global.html#isArcPrev">isArcPrev</a></li><li><a href="global.html#isAssignmentLHS">isAssignmentLHS</a></li><li><a href="global.html#isCallbackPropName">isCallbackPropName</a></li><li><a href="global.html#isCallExpressionMatcher">isCallExpressionMatcher</a></li><li><a href="global.html#isChar">isChar</a></li><li><a href="global.html#isCharAndNotRestricted">isCharAndNotRestricted</a></li><li><a href="global.html#isChildContextTypesDeclaration">isChildContextTypesDeclaration</a></li><li><a href="global.html#isClass">isClass</a></li><li><a href="global.html#isCommonVariableNameForProps">isCommonVariableNameForProps</a></li><li><a href="global.html#isComponentInRenderProp">isComponentInRenderProp</a></li><li><a href="global.html#isContextTypeDeclaration">isContextTypeDeclaration</a></li><li><a href="global.html#isContextTypesDeclaration">isContextTypesDeclaration</a></li><li><a href="global.html#isConvex">isConvex</a></li><li><a href="global.html#isCreateElementMatcher">isCreateElementMatcher</a></li><li><a href="global.html#isCreateElementWithProps">isCreateElementWithProps</a></li><li><a href="global.html#isCurveStraightLine">isCurveStraightLine</a></li><li><a href="global.html#isDangerous">isDangerous</a></li><li><a href="global.html#isDefaultPropsDeclaration">isDefaultPropsDeclaration</a></li><li><a href="global.html#isDirectValueOfRenderProperty">isDirectValueOfRenderProperty</a></li><li><a href="global.html#isDisplayNameDeclaration">isDisplayNameDeclaration</a></li><li><a href="global.html#isDOMComponent">isDOMComponent</a></li><li><a href="global.html#isDOMElement">isDOMElement</a></li><li><a href="global.html#isES5Component">isES5Component</a></li><li><a href="global.html#isES6Component">isES6Component</a></li><li><a href="global.html#isExplicitComponent">isExplicitComponent</a></li><li><a href="global.html#isFirstLetterCapitalized">isFirstLetterCapitalized</a></li><li><a href="global.html#isForbidden">isForbidden</a></li><li><a href="global.html#isFragment">isFragment</a></li><li><a href="global.html#isFragmentWithOnlyTextAndIsNotChild">isFragmentWithOnlyTextAndIsNotChild</a></li><li><a href="global.html#isFunction">isFunction</a></li><li><a href="global.html#isFunctionLike">isFunctionLike</a></li><li><a href="global.html#isFunctionLikeExpression">isFunctionLikeExpression</a></li><li><a href="global.html#isFunctionType">isFunctionType</a></li><li><a href="global.html#isHiddenFromScreenReader">isHiddenFromScreenReader</a></li><li><a href="global.html#isInClassComponent">isInClassComponent</a></li><li><a href="global.html#isInLifeCycleMethod">isInLifeCycleMethod</a></li><li><a href="global.html#isInsideClassBody">isInsideClassBody</a></li><li><a href="global.html#isInteractiveElement">isInteractiveElement</a></li><li><a href="global.html#isInteractiveRole">isInteractiveRole</a></li><li><a href="global.html#isJSX">isJSX</a></li><li><a href="global.html#isJSXAttributeKey">isJSXAttributeKey</a></li><li><a href="global.html#isJSXAttributeOfExpressionContainerMatcher">isJSXAttributeOfExpressionContainerMatcher</a></li><li><a href="global.html#isJSXExpressionContainerMatcher">isJSXExpressionContainerMatcher</a></li><li><a href="global.html#isKeyedElement">isKeyedElement</a></li><li><a href="global.html#isMapCall">isMapCall</a></li><li><a href="global.html#isNameChar">isNameChar</a></li><li><a href="global.html#isNameStartChar">isNameStartChar</a></li><li><a href="global.html#isNCNameChar">isNCNameChar</a></li><li><a href="global.html#isNCNameStartChar">isNCNameStartChar</a></li><li><a href="global.html#isNever">isNever</a></li><li><a href="global.html#isNodeALifeCycleMethod">isNodeALifeCycleMethod</a></li><li><a href="global.html#isNodeFirstInLine">isNodeFirstInLine</a></li><li><a href="global.html#isNonInteractiveElement">isNonInteractiveElement</a></li><li><a href="global.html#isNonInteractiveRole">isNonInteractiveRole</a></li><li><a href="global.html#isNonLiteralProperty">isNonLiteralProperty</a></li><li><a href="global.html#isNonspaceJSXTextOrJSXCurly">isNonspaceJSXTextOrJSXCurly</a></li><li><a href="global.html#isNumeric">isNumeric</a></li><li><a href="global.html#isObject">isObject</a></li><li><a href="global.html#isObjectExpressionMatcher">isObjectExpressionMatcher</a></li><li><a href="global.html#isOnlyWhitespace">isOnlyWhitespace</a></li><li><a href="global.html#isParenthesized">isParenthesized</a></li><li><a href="global.html#isPropertyOfObjectExpressionMatcher">isPropertyOfObjectExpressionMatcher</a></li><li><a href="global.html#isPropTypesDeclaration">isPropTypesDeclaration</a></li><li><a href="global.html#isPropTypesUsageByMemberExpression">isPropTypesUsageByMemberExpression</a></li><li><a href="global.html#isPureComponent">isPureComponent</a></li><li><a href="global.html#isRequiredProp">isRequiredProp</a></li><li><a href="global.html#isRequiredPropType">isRequiredPropType</a></li><li><a href="global.html#isRestrictedChar">isRestrictedChar</a></li><li><a href="global.html#isReturningJSX">isReturningJSX</a></li><li><a href="global.html#isReturningOnlyNull">isReturningOnlyNull</a></li><li><a href="global.html#isReturnStatementOfHook">isReturnStatementOfHook</a></li><li><a href="global.html#isS">isS</a></li><li><a href="global.html#isSetStateUpdater">isSetStateUpdater</a></li><li><a href="global.html#isShapeProp">isShapeProp</a></li><li><a href="global.html#isStateMemberExpression">isStateMemberExpression</a></li><li><a href="global.html#isSuperTypeParameterPropsDeclaration">isSuperTypeParameterPropsDeclaration</a></li><li><a href="global.html#isThisDotProps">isThisDotProps</a></li><li><a href="global.html#isTypescriptFunctionOverloads">isTypescriptFunctionOverloads</a></li><li><a href="global.html#isTypescriptNamespaceMerging">isTypescriptNamespaceMerging</a></li><li><a href="global.html#isValidStatusCode">isValidStatusCode</a></li><li><a href="global.html#isWhiteSpaces">isWhiteSpaces</a></li><li><a href="global.html#iterateProperties">iterateProperties</a></li><li><a href="global.html#join">join</a></li><li><a href="global.html#js2transform">js2transform</a></li><li><a href="global.html#likeArray">likeArray</a></li><li><a href="global.html#likeBoolean">likeBoolean</a></li><li><a href="global.html#likeInteger">likeInteger</a></li><li><a href="global.html#likeNull">likeNull</a></li><li><a href="global.html#likeNumber">likeNumber</a></li><li><a href="global.html#likeObject">likeObject</a></li><li><a href="global.html#likeString">likeString</a></li><li><a href="global.html#load">load</a></li><li><a href="global.html#loadFile">loadFile</a></li><li><a href="global.html#loadPlugin">loadPlugin</a></li><li><a href="global.html#localstorage">localstorage</a></li><li><a href="global.html#log">log</a></li><li><a href="global.html#makeLonghand">makeLonghand</a></li><li><a href="global.html#makeSourceCode">makeSourceCode</a></li><li><a href="global.html#Mapping">Mapping</a></li><li><a href="global.html#mayContainChildComponent">mayContainChildComponent</a></li><li><a href="global.html#mem">mem</a></li><li><a href="global.html#memoize">memoize</a></li><li><a href="global.html#memoizeQuery">memoizeQuery</a></li><li><a href="global.html#mergeRules">mergeRules</a></li><li><a href="global.html#mountedContainers">mountedContainers</a></li><li><a href="global.html#mountedRootEntries">mountedRootEntries</a></li><li><a href="global.html#mustBeValidated">mustBeValidated</a></li><li><a href="global.html#names">names</a></li><li><a href="global.html#normalizeEntries">normalizeEntries</a></li><li><a href="global.html#normalizeEventHandlerOptions">normalizeEventHandlerOptions</a></li><li><a href="global.html#notEmpty">notEmpty</a></li><li><a href="global.html#parse">parse</a></li><li><a href="global.html#plural">plural</a></li><li><a href="global.html#prepareImportsAndExports">prepareImportsAndExports</a></li><li><a href="global.html#prevTime">prevTime</a></li><li><a href="global.html#propName">propName</a></li><li><a href="global.html#quickSort">quickSort</a></li><li><a href="global.html#readJSON">readJSON</a></li><li><a href="global.html#reconcile">reconcile</a></li><li><a href="global.html#recursivePatternCapture">recursivePatternCapture</a></li><li><a href="global.html#removeCacheFile">removeCacheFile</a></li><li><a href="global.html#removeEntry">removeEntry</a></li><li><a href="global.html#removeKey">removeKey</a></li><li><a href="global.html#reportNodeAttribute">reportNodeAttribute</a></li><li><a href="global.html#resolveComponentName">resolveComponentName</a></li><li><a href="global.html#resolveFiles">resolveFiles</a></li><li><a href="global.html#s">s</a></li><li><a href="global.html#save">save</a></li><li><a href="global.html#search">search</a></li><li><a href="global.html#selectColor">selectColor</a></li><li><a href="global.html#set">set</a></li><li><a href="global.html#setKey">setKey</a></li><li><a href="global.html#sorter">sorter</a></li><li><a href="global.html#srcFiles">srcFiles</a></li><li><a href="global.html#startsWithRender">startsWithRender</a></li><li><a href="global.html#stripQuotes">stripQuotes</a></li><li><a href="global.html#Table">Table</a></li><li><a href="global.html#tagConvention">tagConvention</a></li><li><a href="global.html#tagNameHasDot">tagNameHasDot</a></li><li><a href="global.html#toPosixPath">toPosixPath</a></li><li><a href="global.html#toRelativePath">toRelativePath</a></li><li><a href="global.html#traverse">traverse</a></li><li><a href="global.html#traverseReturns">traverseReturns</a></li><li><a href="global.html#trimLikeReact">trimLikeReact</a></li><li><a href="global.html#tty">tty</a></li><li><a href="global.html#unwrapTSAsExpression">unwrapTSAsExpression</a></li><li><a href="global.html#useColors">useColors</a></li><li><a href="global.html#usesNamespaceAsObject">usesNamespaceAsObject</a></li><li><a href="global.html#VALID_PAIR_VALUES">VALID_PAIR_VALUES</a></li><li><a href="global.html#VALID_VALUES">VALID_VALUES</a></li><li><a href="global.html#validateReservedFirstConfig">validateReservedFirstConfig</a></li><li><a href="global.html#.'default'">.'default'</a></li><li><a href="global.html#normalize">normalize</a></li><li><a href="global.html#numberHints">numberHints</a></li><li><a href="global.html#optimizeFile">optimizeFile</a></li><li><a href="global.html#optimizeFolder">optimizeFolder</a></li><li><a href="global.html#optimizePluginsArray">optimizePluginsArray</a></li><li><a href="global.html#parseSourceMapInput">parseSourceMapInput</a></li><li><a href="global.html#parseViewBox">parseViewBox</a></li><li><a href="global.html#pathMovesWithinViewBox">pathMovesWithinViewBox</a></li><li><a href="global.html#preparePluginsArray">preparePluginsArray</a></li><li><a href="global.html#printErrorAndExit">printErrorAndExit</a></li><li><a href="global.html#printProfitInfo">printProfitInfo</a></li><li><a href="global.html#printTimeInfo">printTimeInfo</a></li><li><a href="global.html#processDirectory">processDirectory</a></li><li><a href="global.html#processSVGData">processSVGData</a></li><li><a href="global.html#randomIntInRange">randomIntInRange</a></li><li><a href="global.html#readMappings">readMappings</a></li><li><a href="global.html#ready">ready</a></li><li><a href="global.html#recursiveSearch">recursiveSearch</a></li><li><a href="global.html#reducerAddEmployee">reducerAddEmployee</a></li><li><a href="global.html#relative">relative</a></li><li><a href="global.html#removeLeadingZero">removeLeadingZero</a></li><li><a href="global.html#removeUseless">removeUseless</a></li><li><a href="global.html#rgb2hex">rgb2hex</a></li><li><a href="global.html#round">round</a></li><li><a href="global.html#S_LIST">S_LIST</a></li><li><a href="global.html#send">send</a></li><li><a href="global.html#setCssStr">setCssStr</a></li><li><a href="global.html#setHeaderForResponse">setHeaderForResponse</a></li><li><a href="global.html#setPluginActiveState">setPluginActiveState</a></li><li><a href="global.html#setStatusCode">setStatusCode</a></li><li><a href="global.html#setupCustomPlugin">setupCustomPlugin</a></li><li><a href="global.html#setupHooks">setupHooks</a></li><li><a href="global.html#setupOutputFileSystem">setupOutputFileSystem</a></li><li><a href="global.html#setupWriteToDisk">setupWriteToDisk</a></li><li><a href="global.html#shouldSkipTypescriptNamespace">shouldSkipTypescriptNamespace</a></li><li><a href="global.html#showAvailablePlugins">showAvailablePlugins</a></li><li><a href="global.html#smartRound">smartRound</a></li><li><a href="global.html#sortSelectors">sortSelectors</a></li><li><a href="global.html#SPECIFICITY">SPECIFICITY</a></li><li><a href="global.html#Stream">Stream</a></li><li><a href="global.html#stringHints">stringHints</a></li><li><a href="global.html#strongRound">strongRound</a></li><li><a href="global.html#svgoCssSelectAdapterMin">svgoCssSelectAdapterMin</a></li><li><a href="global.html#swap">swap</a></li><li><a href="global.html#symlinkPaths">symlinkPaths</a></li><li><a href="global.html#THIS_FILE">THIS_FILE</a></li><li><a href="global.html#thunkFor">thunkFor</a></li><li><a href="global.html#toArrayBuffer">toArrayBuffer</a></li><li><a href="global.html#toBuffer">toBuffer</a></li><li><a href="global.html#toSetString">toSetString</a></li><li><a href="global.html#toVLQSigned">toVLQSigned</a></li><li><a href="global.html#trimFilename">trimFilename</a></li><li><a href="global.html#validate">validate</a></li><li><a href="global.html#validateObject">validateObject</a></li><li><a href="global.html#value">value</a></li><li><a href="global.html#variablesInScope">variablesInScope</a></li><li><a href="global.html#wdm">wdm</a></li><li><a href="global.html#wrapper">wrapper</a></li><li><a href="global.html#writeJSON">writeJSON</a></li><li><a href="global.html#writeOutput">writeOutput</a></li><li><a href="global.html#XML_1_0">XML_1_0</a></li><li><a href="global.html#XMLNS_1_0">XMLNS_1_0</a></li><li><a href="global.html#xmlSerialization">xmlSerialization</a></li></ul>
</nav>

<br class="clear">

<footer>
    Documentation generated by <a href="https://github.com/jsdoc/jsdoc">JSDoc 3.6.11</a> on Mon Oct 03 2022 12:23:46 GMT+0200 (heure d’été d’Europe centrale)
</footer>

<script> prettyPrint(); </script>
<script src="scripts/linenumber.js"> </script>
</body>
</html>